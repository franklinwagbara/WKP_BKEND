// <auto-generated />
using System;
using Backend_UMR_Work_Program.DataModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend_UMR_Work_Program.Migrations
{
    [DbContext(typeof(WKP_DBContext))]
    [Migration("20230119103908_AddNewProperties2")]
    partial class AddNewProperties2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ActualExpenditure", b =>
                {
                    b.Property<int>("Actual_ExpenditureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Actual_ExpenditureId"), 1L, 1);

                    b.Property<string>("Direct_Exploration_Budget")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Equivalent_Naira_Dollar_Component")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Other_Activity_Budget")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UserNumber")
                        .HasColumnType("int");

                    b.HasKey("Actual_ExpenditureId");

                    b.ToTable("ActualExpenditure", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ActualProposed_Year", b =>
                {
                    b.Property<int>("ActualProposedYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActualProposedYearId"), 1L, 1);

                    b.Property<string>("ActualProposedYear")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.HasKey("ActualProposedYearId");

                    b.ToTable("ActualProposed_Year", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_ACCIDENT_INCIDENCE_REPORT_CAUSE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_ACCIDENT_INCIDENCE_REPORT_CAUSE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_ACCIDENT_INCIDENCE_REPORT_CONSEQUENCE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_ACCIDENT_INCIDENCE_REPORT_CONSEQUENCE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_BUDGET_CAPEX_OPEX", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_BUDGET_CAPEX_OPEX", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_CATEGORy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_CATEGORIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_CHAIRPERSON", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CHAIRPERSON")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CHAIRPERSONEMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_CHAIRPERSON", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_COMPANY_CODE", b =>
                {
                    b.Property<string>("CompanyCode")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("GUID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IsActive")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UserNumber")
                        .HasColumnType("int");

                    b.ToTable("ADMIN_COMPANY_CODE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_COMPANY_DETAIL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address_of_Company")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Alternate_Contact_Person")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_NAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Contact_Person")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Date_Created")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email_Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email_Address_alt")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FLAG")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name_of_MD_CEO")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Phone_NO_of_MD_CEO")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Phone_No")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone_No_alt")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("check_status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_COMPANY_DETAILS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_COMPANY_INFORMATION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CATEGORY")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_NAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_BY")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DELETED_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_STATUS")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DESIGNATION")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<int?>("ELPS_ID")
                        .HasColumnType("int");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EMAIL_REMARK")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FLAG1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FLAG2")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FLAG_PASSWORD_CHANGE")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("LAST_LOGIN_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PASSWORDS")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PHONE_NO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("STATUS_")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UPDATED_BY")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UPDATED_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_COMPANY_INFORMATION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_COMPANY_INFORMATION_AUDIT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CATEGORY")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_NAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_BY")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DELETED_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_STATUS")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DESIGNATION")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FLAG1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FLAG2")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FLAG_PASSWORD_CHANGE")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("LAST_LOGIN_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PASSWORDS")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PHONE_NO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("STATUS_")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UPDATED_BY")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UPDATED_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_COMPANY_INFORMATION_AUDIT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_COMPANY_INFORMATION_old_18052020", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CATEGORY")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_NAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DESIGNATION")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FLAG_PASSWORD_CHANGE")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("LAST_LOGIN_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PASSWORDS")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PHONE_NO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("STATUS_")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_COMPANY_INFORMATION_old_18052020", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_COMPANYEMAIL_REMINDER_TABLE", b =>
                {
                    b.Property<string>("CLOSE_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_NAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EMAIL_REMARK")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Expr1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("OPEN_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("ADMIN_COMPANYEMAIL_REMINDER_TABLE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_COMPLIANCE_INDEX_TABLE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Compliance_index_for_each_division")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Divisions")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Number_of_Occurrence_of_Sanctions")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Number_of_Occurrence_of_Waivers")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Number_of_Occurrence_of_Warnings")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Penalty_Factor_for_Sanction")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Penalty_Factor_for_Waivers")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Penalty_Factor_for_Warning")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_COMPLIANCE_INDEX_TABLE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_CONCESSION_STATUS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Status_")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Status_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_CONCESSION_STATUS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_CONCESSIONS_INFORMATION", b =>
                {
                    b.Property<int>("Consession_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Consession_Id"), 1L, 1);

                    b.Property<string>("Area")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CLOSE_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Comment")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConcessionName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Concession_Held")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Concession_Unique_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_BY")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DELETED_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_STATUS")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_of_Expiration")
                        .HasColumnType("datetime");

                    b.Property<string>("EMAIL_REMARK")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Equity_distribution")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Field_Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Flag1")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Flag2")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Geological_location")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OPEN_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status_")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_Grant_Award")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("submitted")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.HasKey("Consession_Id")
                        .HasName("PK_ADMIN_CONCESSIONS_INFORMATIONs");

                    b.ToTable("ADMIN_CONCESSIONS_INFORMATION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_CONCESSIONS_INFORMATION_AUDIT", b =>
                {
                    b.Property<int>("Consession_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Consession_Id"), 1L, 1);

                    b.Property<string>("Area")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CLOSE_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Comment")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Concession_Held")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Concession_Unique_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_BY")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DELETED_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_STATUS")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_of_Expiration")
                        .HasColumnType("datetime");

                    b.Property<string>("Equity_distribution")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Flag1")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Flag2")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Geological_location")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OPEN_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status_")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_Grant_Award")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("submitted")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.HasKey("Consession_Id");

                    b.ToTable("ADMIN_CONCESSIONS_INFORMATION_AUDIT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_CONCESSIONS_INFORMATION_BK_23112021", b =>
                {
                    b.Property<int>("Consession_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Consession_Id"), 1L, 1);

                    b.Property<string>("Area")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CLOSE_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Comment")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Concession_Held")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Concession_Unique_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_BY")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DELETED_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DELETED_STATUS")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_of_Expiration")
                        .HasColumnType("datetime");

                    b.Property<string>("EMAIL_REMARK")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Equity_distribution")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Flag1")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Flag2")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Geological_location")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OPEN_DATE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status_")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_Grant_Award")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("submitted")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.HasKey("Consession_Id")
                        .HasName("PK_ADMIN_CONCESSIONS_INFORMATION_");

                    b.ToTable("ADMIN_CONCESSIONS_INFORMATION_BK_23112021", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_CONCESSIONS_INFORMATION_HISTORY", b =>
                {
                    b.Property<int>("Consession_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Consession_Id"), 1L, 1);

                    b.Property<string>("Area")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Concession_Held")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_of_Expiration")
                        .HasColumnType("datetime");

                    b.Property<string>("Equity_distribution")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Flag1")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Flag2")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Geological_location")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Status_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_Grant_Award")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Consession_Id");

                    b.ToTable("ADMIN_CONCESSIONS_INFORMATION_HISTORY", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_CONCESSIONS_INFORMATION_old_18052020", b =>
                {
                    b.Property<int>("Consession_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Consession_Id"), 1L, 1);

                    b.Property<string>("Area")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Comment")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Concession_Held")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_of_Expiration")
                        .HasColumnType("datetime");

                    b.Property<string>("Equity_distribution")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Flag1")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Flag2")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Geological_location")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Status_")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_Grant_Award")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("submitted")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.HasKey("Consession_Id")
                        .HasName("PK_ADMIN_CONCESSIONS_INFORMATION");

                    b.ToTable("ADMIN_CONCESSIONS_INFORMATION_old_18052020", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_DATETIME_PRESENTATION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CHAIRPERSON")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CHAIRPERSONEMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("CLOSE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("COMPANYEMAIL")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("COMPANYNAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CREATED_BY")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DATETIME_PRESENTATION")
                        .HasColumnType("datetime");

                    b.Property<string>("DATE_TIME_TEXT")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DAYS_TO_GO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DIVISION")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Date_Created_BY_COMPANY")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("EMAIL_REMARK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LAST_RUN_DATE")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LAST_RUN_TIME")
                        .HasColumnType("datetime");

                    b.Property<string>("MEETINGROOM")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MOM")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MOM_UPLOADED_BY")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("MOM_UPLOAD_DATE")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("OPEN_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("PHONE_NO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PRESENTED")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SCRIBE")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SCRIBEEMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("STATUS")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Submitted")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("YEAR")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("wp_date")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("wp_time")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_DATETIME_PRESENTATION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_DEVELOPMENT_PLAN_STATUS", b =>
                {
                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("ADMIN_DEVELOPMENT_PLAN_STATUS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_DIVISION_REP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DIVISION")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DIVISIONEMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("NAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_DIVISION_REP", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_DIVISION_REP_LIST", b =>
                {
                    b.Property<string>("DIVISION")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DIV_REP_EMAIL")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DIV_REP_NAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.ToTable("ADMIN_DIVISION_REP_LIST", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_DIVISIONAL_REPRESENTATIVE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CHAIRPERSON")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CHAIRPERSONEMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("CLOSE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("COMPANYEMAIL")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("COMPANYNAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CREATED_BY")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DATETIME_PRESENTATION")
                        .HasColumnType("datetime");

                    b.Property<string>("DIV_REP_DIV")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DIV_REP_EMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DIV_REP_NAME")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("MEETINGROOM")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("OPEN_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("PRESENTED")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SCRIBE")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SCRIBEEMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("STATUS")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Submitted")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("YEAR")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("wp_date")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("wp_time")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_DIVISIONAL_REPRESENTATIVE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_DIVISIONAL_REPS_PRESENTATION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CHAIRPERSON")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CHAIRPERSONEMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("CLOSE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("COMPANYEMAIL")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("COMPANYNAME")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CREATED_BY")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DATETIME_PRESENTATION")
                        .HasColumnType("datetime");

                    b.Property<string>("DATE_TIME_TEXT")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DAYS_TO_GO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DIVISION")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("EMAIL_REMARK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LAST_RUN_DATE")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LAST_RUN_TIME")
                        .HasColumnType("datetime");

                    b.Property<string>("MEETINGROOM")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MOM")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MOM_UPLOADED_BY")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("MOM_UPLOAD_DATE")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("OPEN_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("PHONE_NO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PRESENTED")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("REPRESENTATIVE")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("REPRESENTATIVE_EMAIL")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SCRIBE")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SCRIBEEMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("STATUS")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Submitted")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("YEAR")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("wp_date")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("wp_time")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_DIVISIONAL_REPS_PRESENTATION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_EMAIL_DAY", b =>
                {
                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DAYS_")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Deleted_Date")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Deleted_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Deleted_status")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Email_")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SN"), 1L, 1);

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("ADMIN_EMAIL_DAYS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_ENVIROMENTAL_STUDIES_APPROVED_ONGOING", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_ENVIROMENTAL_STUDIES_APPROVED_ONGOING", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_ENVIROMENTAL_STUDIES_IF_ONGOING", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_ENVIROMENTAL_STUDIES_IF_ONGOING", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_ENVIROMENTAL_STUDy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_ENVIROMENTAL_STUDIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_ENVIRONMENTAL_STUDY", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_ENVIRONMENTAL_STUDY", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_Fatalities_Casualties_ManOverboard_TRI_LTI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_Fatalities_Casualties_ManOverboard_TRI_LTI", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_FEILDDEVELOPMENTPLAN_WELLORGA", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IsActive")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("ADMIN_FEILDDEVELOPMENTPLAN_WELLORGAS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_FIVE_YEAR_TREND", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_FIVE_YEAR_TREND", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_GASPRODUCTION_UTILIZED_MMSCF", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IsActive")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("ADMIN_GASPRODUCTION_UTILIZED_MMSCF", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_HSE_CONDITION_OF_EQUIPMENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_HSE_CONDITION_OF_EQUIPMENT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_HSE_OSP_REGISTRATIONS_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_HSE_OSP REGISTRATIONS_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_HSE_OSP_REGISTRATIONS_NEW1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_HSE_OSP_REGISTRATIONS_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_INSPECTION_MAINTENANCE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_INSPECTION_MAINTENANCE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_LIST_OF_OMLS_OPL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_LIST_OF_OMLS_OPLS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_LITIGATION_JURISDICTION", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IsActive")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("ADMIN_LITIGATION_JURISDICTION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_MEETING_ROOM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("MEETING_ROOM")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_MEETING_ROOM", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_MONTH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Months")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_MONTHS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_Operating_Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_Operating_Facilities");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_ONGOING_COMPLETED", b =>
                {
                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.ToTable("ADMIN_ONGOING_COMPLETED", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_PERFOMANCE_INDEX", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CONCESSIONTYPE")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Graduation_Scale")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("INDICATOR")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_PERFOMANCE_INDEX", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_PRESENTATION_CATEGORy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_PRESENTATION_CATEGORIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_PRESENTATION_TIME", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("pt")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_PRESENTATION_TIME", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_PRODUCED_WATER_MANAGEMENT_EXPORT_TO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_PRODUCED_WATER_MANAGEMENT_EXPORT_TO", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_PRODUCED_WATER_MANAGEMENT_how_do_you_handle_your_produced_water", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_PRODUCED_WATER_MANAGEMENT_how_do_you_handle_your_produced_water", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_PRODUCED_WATER_MANAGEMENT_TYPE_OF_REPORT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_PRODUCED_WATER_MANAGEMENT_TYPE_OF_REPORT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_PRODUCED_WATER_MANAGEMENT_ZONE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_PRODUCED_WATER_MANAGEMENT_ZONE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_PUBLIC_HOLIDAY", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("public_holidays")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_PUBLIC_HOLIDAY", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_QUARTER", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_QUARTER", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_REASON_FOR_ADDITION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("REASON_FOR_ADDITION")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_REASON_FOR_ADDITION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_REASON_FOR_DECLINE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("REASON_FOR_DECLINE")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_REASON_FOR_DECLINE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_SCHEDULED_STATUS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("SCHEDULED_STATUS")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_SCHEDULED_STATUS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_SCRIBE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("SCRIBE")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SCRIBEEMAIL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_SCRIBE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_STRATEGIC_PLANS_ON_COMPANY_BASI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_STRATEGIC_PLANS_ON_COMPANY_BASIS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_SUBMISSION_WINDOW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CLOSE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("Close_date_only")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Close_time_only")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<string>("FLAG_PASSWORD_CHANGE")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("LAST_LOGIN_DATE")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("OPEN_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("Open_date_only")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Open_time_only")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("STATUS_")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Year")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_SUBMISSION_WINDOW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_Terrain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_Terrain", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_TRAINING_LOCAL_CONTENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_TRAINING_LOCAL_CONTENT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_TRAINING_NIGERIA_CONTENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_TRAINING_NIGERIA_CONTENT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_TYPE_OF_TEST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("TESTTYPE")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TEST_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_TYPE_OF_TEST", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WASTE_MANAGEMENT_FACILITY", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WASTE_MANAGEMENT_FACILITY", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WELL_CATEGORy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("welltype")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WELL_CATEGORIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WELL_Trajectory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("welltype")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WELL_Trajectory", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WELL_TYPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("welltype")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WELL_TYPE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WORK_PROGRAM_REPORT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Report_Content")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Report_Content_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WORK_PROGRAM_REPORT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WORK_PROGRAM_REPORT_History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Report_Content")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Report_Content_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WORK_PROGRAM_REPORT_History", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WP_PENALTIES_AUDIT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("NO_SHOW")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("NO_SUBMISSION")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WP_PENALTIES_AUDIT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WP_PENALTy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("NO_SHOW")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("NO_SUBMISSION")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WP_PENALTIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WP_START_END_DATE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("end_date")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("start_date")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WP_START_END_DATE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WP_START_END_DATE_AUDIT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("end_date")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("start_date")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WP_START_END_DATE_AUDIT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WP_START_END_DATE_DATA_UPLOAD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("end_date")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("start_date")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WP_START_END_DATE_DATA_UPLOAD", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_WP_START_END_DATE_DATA_UPLOAD_AUDIT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("end_date")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("start_date")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_WP_START_END_DATE_DATA_UPLOAD_AUDIT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_YEAR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_YEAR", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ADMIN_YES_NO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("categories")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("categories_Desc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADMIN_YES_NO", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApprovalRef")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int?>("ConcessionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrentDesk")
                        .HasColumnType("int");

                    b.Property<bool?>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<int?>("FieldID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool?>("Submitted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("YearOfWKP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ApplicationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("FriendlyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationCategories");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ApplicationDeskHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationDeskHistories");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ApplicationDocument", b =>
                {
                    b.Property<int>("AppDocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppDocID"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("ElpsDocTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("AppDocID")
                        .HasName("PK_ApplicationDocuments_UT");

                    b.ToTable("ApplicationDocument", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ApplicationProccess", b =>
                {
                    b.Property<int>("ProccessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProccessID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("SBU_ID")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ProccessID")
                        .HasName("PK_WorkProccess_");

                    b.ToTable("ApplicationProccesses");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Appraisal_Drilling", b =>
                {
                    b.Property<int>("Appraisal_DrillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Appraisal_DrillingId"), 1L, 1);

                    b.Property<string>("Actual_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<long?>("Budget_Allocation")
                        .HasColumnType("bigint");

                    b.Property<string>("Proposed_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Appraisal_DrillingId");

                    b.ToTable("Appraisal_Drilling", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.AuditTrail", b =>
                {
                    b.Property<int>("AuditLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditLogID"), 1L, 1);

                    b.Property<string>("AuditAction")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserID")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.HasKey("AuditLogID")
                        .HasName("PK_AuditTrail");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.BUDGET_ACTUAL_EXPENDITURE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Budget_for_Direct_Exploration_and_Production_Activities")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_for_Direct_Exploration_and_Production_Activities_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Budget_for_Direct_Exploration_and_Production_Activities_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Budget_for_other_Activities")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_for_other_Activities_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Budget_for_other_Activities_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Equivalent_Naira_and_Dollar_Component_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Equivalent_Naira_and_Dollar_Component_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Equivalent_Naira_and_Dollar_Component_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("BUDGET_ACTUAL_EXPENDITURE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.BUDGET_CAPEX_OPEX", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Dollar_equivalent")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Item_Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Item_Type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("dollar")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("naira")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("remarks")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("BUDGET_CAPEX_OPEX", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.BUDGET_PERFORMANCE_DEVELOPMENT_DRILLING_ACTIVITy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("COMPLETION_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPLETION_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DEVELOPMENT_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DEVELOPMENT_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WORKOVER_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("WORKOVER_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("BUDGET_PERFORMANCE_DEVELOPMENT_DRILLING_ACTIVITIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.BUDGET_PERFORMANCE_EXPLORATORY_ACTIVITy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACQUISITION_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ACQUISITION_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("APPRAISAL_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("APPRAISAL_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("EXPLORATION_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EXPLORATION_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROCESSING_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PROCESSING_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("REPROCESSING_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("REPROCESSING_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("BUDGET_PERFORMANCE_EXPLORATORY_ACTIVITIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.BUDGET_PERFORMANCE_FACILITIES_DEVELOPMENT_PROJECT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CONCEPT_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CONCEPT_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CONSTRUCTION_FABRICATION_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CONSTRUCTION_FABRICATION_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DECOMMISSIONING_ABANDONMENT")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DETAILED_ENGINEERING_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DETAILED_ENGINEERING_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("FEED_COST_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FEED_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("INSTALLATION_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("INSTALLATION_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROCUREMENT_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PROCUREMENT_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UPGRADE_MAINTENANCE_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("UPGRADE_MAINTENANCE_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("BUDGET_PERFORMANCE_FACILITIES_DEVELOPMENT_PROJECT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.BUDGET_PERFORMANCE_PRODUCTION_COST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DIRECT_COST_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DIRECT_COST_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("INDIRECT_COST_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("INDIRECT_COST_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("BUDGET_PERFORMANCE_PRODUCTION_COST", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.BUDGET_PROPOSAL_IN_NAIRA_AND_DOLLAR_COMPONENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Budget_for_Direct_Exploration_and_Production_Activities_Dollars")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_for_Direct_Exploration_and_Production_Activities_Naira")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_for_other_Activities_Dollars")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_for_other_Activities_Naira")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Total_Company_Expenditure_Dollars")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_Proposal")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("BUDGET_PROPOSAL_IN_NAIRA_AND_DOLLAR_COMPONENT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.BudgetProposal", b =>
                {
                    b.Property<int>("Budget_ProposalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Budget_ProposalId"), 1L, 1);

                    b.Property<long?>("Direct_Exploration_Budget")
                        .HasColumnType("bigint");

                    b.Property<string>("Oil_Gas_Facility_Maintenance")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<long?>("Other_Activity_Budget")
                        .HasColumnType("bigint");

                    b.Property<long?>("Total_Company_Expenditure")
                        .HasColumnType("bigint");

                    b.HasKey("Budget_ProposalId");

                    b.ToTable("BudgetProposal", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Class_Table", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"), 1L, 1);

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ClassId");

                    b.ToTable("Class_Table", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.COMPANY_CONCESSIONS_FIELD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Concession_Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("Created_On")
                        .HasColumnType("datetime");

                    b.Property<string>("Field_Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("COMPANY_CONCESSIONS_FIELDS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.COMPANY_FIELD", b =>
                {
                    b.Property<int>("Field_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Field_ID"), 1L, 1);

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Concession_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<bool?>("DeletedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Field_Location")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Field_Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Field_ID");

                    b.ToTable("COMPANY_FIELDS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.CompletionJob", b =>
                {
                    b.Property<int>("Completion_JobsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Completion_JobsId"), 1L, 1);

                    b.Property<string>("Actual_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<long?>("Budget_Allocation")
                        .HasColumnType("bigint");

                    b.Property<string>("Proposed_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Completion_JobsId");

                    b.ToTable("CompletionJobs");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.CONCESSION_SITUATION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AdminConcession_ID")
                        .HasColumnType("int");

                    b.Property<string>("Area")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_actual_for_license_or_lease")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Comment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Concession_Held")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_of_Expiration")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_of_Grant_Expiration")
                        .HasColumnType("datetime");

                    b.Property<string>("Did_you_meet_the_minimum_work_programme")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Equity_distribution")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Field_Name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Five_year_proposal")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Geological_location")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Has_Assignment_of_Interest_Fee_been_paid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Has_Signature_Bonus_been_paid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Has_the_Concession_Rentals_been_paid")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("How_Much_Concession_Rental_have_been_paid_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("How_Much_Renewal_Bonus_have_been_paid_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("How_Much_Signature_Bonus_have_been_paid_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("If_No_why_concession")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("If_No_why_renewal")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("If_No_why_sig")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_there_an_application_for_renewal")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name_of_Company")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("No_of_discovered_field")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("No_of_field_producing")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("area_in_square_meter_based_on_company_records")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("proposed_budget_for_each_license_lease")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("relinquishment_retention")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("CONCESSION_SITUATION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ConcessionSituation", b =>
                {
                    b.Property<int>("Concession_situationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Concession_situationId"), 1L, 1);

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("Budget_Proposal")
                        .HasColumnType("bigint");

                    b.Property<string>("Company_Category")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Concession_Held")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Date_Grant_Expiration")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Equity_Shares")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Nbr_Field_Producing")
                        .HasColumnType("int");

                    b.Property<int?>("Nbr_discovered_Field")
                        .HasColumnType("int");

                    b.HasKey("Concession_situationId");

                    b.ToTable("ConcessionSituation", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ConcessionSituationTwo", b =>
                {
                    b.Property<int>("ConcessionSituationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConcessionSituationId"), 1L, 1);

                    b.Property<string>("ActualBudgetCurrentYr")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ApplicationRenewal")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("ConcessionRentals")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("ContractType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FiveYrsProposal")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NoApplicationRenewalReason")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NoConcessionRentalsReason")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NoSignatureBonusReason")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SignatureBonus")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Terrain")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("ConcessionSituationId");

                    b.ToTable("ConcessionSituationTwo", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Contract_Type", b =>
                {
                    b.Property<int>("Contract_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contract_TypeId"), 1L, 1);

                    b.Property<string>("ContractType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Contract_TypeId");

                    b.ToTable("Contract_Type", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.CSR", b =>
                {
                    b.Property<int>("CSR_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CSR_Id"), 1L, 1);

                    b.Property<long?>("Actual_Spent")
                        .HasColumnType("bigint");

                    b.Property<string>("All_MOU_Submitted")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<long?>("Budget")
                        .HasColumnType("bigint");

                    b.Property<string>("CSR_Projects")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MOU_with_Community")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("Percentage_Completion")
                        .HasColumnType("int");

                    b.Property<string>("Reason_WithOut_MOU")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("CSR_Id");

                    b.ToTable("CSR", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Data_Type", b =>
                {
                    b.Property<int>("DataTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DataTypeId"), 1L, 1);

                    b.Property<string>("Created_by")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DataType")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.HasKey("DataTypeId");

                    b.ToTable("Data_Type", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.DecommissioningAbandonment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abandonment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Accrued_DA_Annual_Payment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CAPEX")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ConcessionID")
                        .HasColumnType("int");

                    b.Property<string>("Cumulative_DA_Annual_Payment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<string>("Decommissioning")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("FieldID")
                        .HasColumnType("int");

                    b.Property<string>("OPEX")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DecommissioningAbandonment", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Development_And_Production", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ConcessionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<string>("Do_You_Have_Any_SubsurfacePlan")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Do_You_Have_Reserves_Growth_Strategy_Plan")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("FieldHistory")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("FieldID")
                        .HasColumnType("int");

                    b.Property<string>("FiveYears_Projection_Of_Anticipated_Dev_Schemes")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Have_You_Submitted_AnnualReseves_BookingStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("How_Many_ShutIn_Wells_Are_Planned_To_Reactivate")
                        .HasColumnType("int");

                    b.Property<int?>("How_Many_Wells_Do_You_Plan_To_Abandon")
                        .HasColumnType("int");

                    b.Property<int?>("How_Many_Wells_Do_You_Plan_To_Complete")
                        .HasColumnType("int");

                    b.Property<int?>("Number_Of_Shut_In_Wells")
                        .HasColumnType("int");

                    b.Property<int?>("Number_Of_Well_Interventions_Planned_For_The_Year")
                        .HasColumnType("int");

                    b.Property<string>("Type_Of_SubsurfacePlan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Development_And_Productions");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.DevelopmentDrilling", b =>
                {
                    b.Property<int>("Development_DrillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Development_DrillingId"), 1L, 1);

                    b.Property<string>("Actual_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<long?>("Budget_Allocation")
                        .HasColumnType("bigint");

                    b.Property<string>("Proposed_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Development_DrillingId");

                    b.ToTable("DevelopmentDrilling", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Division", b =>
                {
                    b.Property<int>("Division_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Division_PK"), 1L, 1);

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Division_PK");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.DRILLING_EACH_WELL_COST", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("QUATER")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surface_cordinates_for_each_well_in_degrees")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("well_cost")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("well_name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.ToTable("DRILLING_EACH_WELL_COST", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.DRILLING_EACH_WELL_COST_PROPOSED", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("QUATER")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surface_cordinates_for_each_well_in_degrees")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("well_cost")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("well_name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.ToTable("DRILLING_EACH_WELL_COST_PROPOSED", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Drilling_Operation", b =>
                {
                    b.Property<int>("Drilling_OperationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Drilling_OperationsId"), 1L, 1);

                    b.Property<string>("Actual_no_drilled_current_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Actual_no_drilled_next_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Any_new_discoveries")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Any_new_discoveries_comment")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Category_of_wells_drilled")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Comment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Comment_drill_approval")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Cost_of_drilling_foot")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Do_you_have_approval_to_drill")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Hydrocarbon_counts")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Net_Oil_Gas_Sand")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("No_of_wells_cored")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Number_of_exploration_wells_drilled")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Processing_field_paid")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Status")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Year_of_WorkProgram")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Drilling_OperationsId");

                    b.ToTable("Drilling_Operations");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.DRILLING_OPERATIONS_", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_No_Drilled_in_Current_Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Any_New_Discoveries")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budeget_Allocation_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Budeget_Allocation_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Category")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Current_year_Actual_Net_Oil_Gas_sand_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_year_Actual_Status_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Do_you_have_approval_to_drill")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Give_reasons")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Hydrocarbon_Counts")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("No_of_wells_cored")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Processing_Fees_Paid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_Budget_Allocation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_No_Drilled")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_year_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("State_the_field_where_Discovery_was_made")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Well_Name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("DRILLING_OPERATIONS_", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.DRILLING_OPERATIONS_CATEGORIES_OF_WELL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_No_Drilled_in_Current_Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Actual_Proposed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Actual_wells_name")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Any_New_Discoveries")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Basin")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Category")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Core_Cost_USD")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Core_Depth_Interval")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cored")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Depth_refrence")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FieldDiscoveryUploadFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("HydrocarbonCountUploadFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Hydrocarbon_Counts")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Location_name")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Measured_depth")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("No_of_wells_cored")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Number_of_Days_to_Total_Depth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Processing_Fees_Paid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Propose_well_names")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Proposed_No_Drilled")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_cost_per_well")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("QUATER")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Rig_Name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Rig_type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("State_the_field_where_Discovery_was_made")
                        .HasMaxLength(4999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4999)");

                    b.Property<string>("Surface_cordinates_for_each_well_in_degrees")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Target_reservoir")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Terrain_Drill")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("True_vertical_depth")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Water_depth")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("WellName")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Well_Status_and_Depth")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("spud_date")
                        .HasColumnType("date");

                    b.Property<string>("well_cost")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("well_name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("well_trajectory")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("well_type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DRILLING_OPERATIONS_CATEGORIES_OF_WELLS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Exploration_Drilling", b =>
                {
                    b.Property<int>("Exploration_DrillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Exploration_DrillingId"), 1L, 1);

                    b.Property<string>("Actual_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<long?>("Budget_Allocation")
                        .HasColumnType("bigint");

                    b.Property<string>("Net_Oil_Gas_Sand")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Proposed_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Well_Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Exploration_DrillingId");

                    b.ToTable("Exploration_Drilling", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.FACILITIES_PROJECT_PERFORMANCE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_completion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("FLAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("List_of_Projects")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Planned_completion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("areThereEvidenceOfDesignSafetyCaseApproval")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("evidenceOfDesignSafetyCaseApprovalFilename")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("evidenceOfDesignSafetyCaseApprovalPath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("reasonForNoEvidence")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FACILITIES_PROJECT_PERFORMANCE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.FacilityConstruction", b =>
                {
                    b.Property<int>("Facility_ConstructionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Facility_ConstructionId"), 1L, 1);

                    b.Property<long?>("Actual_Capital_Expenditure")
                        .HasColumnType("bigint");

                    b.Property<string>("Facility_Calibration")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<long?>("Proposed_Capital_Expenditure")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Facility_ConstructionId");

                    b.ToTable("FacilityConstruction", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.FIELD_DEVELOPMENT_FIELDS_AND_STATUS", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Development_Plan_Status")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Field_Name")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("FIELD_DEVELOPMENT_FIELDS_AND_STATUS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.FIELD_DEVELOPMENT_FIELDS_TO_SUBMIT_FDP", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Development_Plan_Status")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Field_Name")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("FIELD_DEVELOPMENT_FIELDS_TO_SUBMIT_FDP", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.FIELD_DEVELOPMENT_PLAN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Are_they_oil_or_gas_wells")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("FDPDocumentFilename")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("How_many_fields_have_FDP")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("How_many_fields_have_approved_FDP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("List_all_the_field_with_FDP")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("No_of_wells_drilled_in_current_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Noof_Producing_Fields")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Number_of_wells_proposed_in_the_FDP")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Processing_Fees_paid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_number_of_wells_from_approved_FDP")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Uploaded_approved_FDP_Document")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Which_fields_do_you_plan_to_submit_an_FDP")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("how_many_fields_in_concession")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("FIELD_DEVELOPMENT_PLAN", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.FIELD_DEVELOPMENT_PLAN_EXCESSIVE_RESERf", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Condensate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Field_Name")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Gas")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Oil")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Proposed_Development_well_name")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("FIELD_DEVELOPMENT_PLAN_EXCESSIVE_RESERVES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Functionality", b =>
                {
                    b.Property<string>("FuncId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IconName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MenuId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<byte?>("SeqNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("FuncId");

                    b.ToTable("Functionality", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.GAS_PRODUCTION_ACTIVITIES_DOMESTIC_SUPPLY", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("GAS_PRODUCTION_ACTIVITIES_DOMESTIC_SUPPLY", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.GAS_PRODUCTION_ACTIVITy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AG_NAG_and_Condensate_in_place_volumes_and_Reserves_Reserves_for_reservoirs_and_Fields")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Amount_Paid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Annotate_clearly_reasons_for_increase_or_reduction_in_Gas_production_utilisation_and_flare_profiles")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("AnnualForecastCondensate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnnualForecastGasAg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnnualForecastGasNag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnnualForecastOil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Are_you_up_to_date_with_your_NDR_data_submission")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Current_Actual_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_gas_production_utilisation_and_Flare_volumes")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_pressures_for_Gas_and_condensate_Reservoirs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_production_status_for_all_Gas_and_condensate_Reservoirs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Custody_Transfer_status")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Domestic_Gas_Supply_DSO")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Domestic_Gas_obligation_met")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Domestic_gas_obligation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Feed_gas_Volumes_into_the_Processing_Facility")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Flared")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Forecast_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Gas_Field_Development_Plan_Approval")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Gas_Plant_Capacity_NEW")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Gas_Production_and_flare_historical_Performance_5_years_Performance_and_Plan")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Gas_Sales_Royalty_Payment")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gas_compositional_Analysis")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Gas_flare_Royalty_payment")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gas_plant_capacity")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Gas_production_and_flare_historical_performance")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Gas_wells_drilled_and_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Gas_wells_drilled_and_wells_planned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Has_annual_NDR_subscription_fee_been_paid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("How_many_NAG_fields_have_approved_Gas_FDP")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_there_a_gas_plant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Is_there_a_license_to_operate_a_gas_plant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LNG_and_NGLs_Production_forecast")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("License_Renewal_Status_for_all_Gas_plants")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Maturation_plans_for_leads_and_prospects_leading_to_reserves_growth")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NDRFilename")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("No_of_gas_well_drilled")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("No_of_gas_well_planned")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("No_of_ongoing_projects")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("No_of_plannned_projects")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Ongoing_and_planned_Gas_plant_projects")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Pipeline_license_renewal_staus")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Planned_projects_for_domestic_supply")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Plant_Utilization_Capacity")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Plant_maintenance_activities")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Production_forecast_for_all_Gas_and_condensate_reservoirs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Projects_planned_for_Domestic_supply_Gas_to_power_industries_etc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remarks_")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Sources_of_Gas_utilisation_should_be_clearly_stated")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Substantiate_flare_reduction_methods_with_projects")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Upload_NDR_payment_receipt")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Utilized")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("When_was_the_date_of_your_last_NDR_submission")
                        .HasColumnType("date");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("number_of_gas_wells_completed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("number_of_gas_wells_tested")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ongoing_and_planned_Gas_plant_projects_NEW")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("penaltyfeepaid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("proposed_flaring")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("proposed_production")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("proposed_utilization")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("GAS_PRODUCTION_ACTIVITIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Gas_Production_Activity1", b =>
                {
                    b.Property<int>("Gas_Production_ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Gas_Production_ActivityId"), 1L, 1);

                    b.Property<string>("Actual_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Flared")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Forecast")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Utilized")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Gas_Production_ActivityId");

                    b.ToTable("Gas_Production_Activity", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Gas_Reserve_Update", b =>
                {
                    b.Property<int>("Gas_ReserveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Gas_ReserveId"), 1L, 1);

                    b.Property<string>("Additional_Reserve")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Reserve2")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<long?>("Total_Production")
                        .HasColumnType("bigint");

                    b.HasKey("Gas_ReserveId");

                    b.ToTable("Gas_Reserve_Update", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.GeographicalActivity", b =>
                {
                    b.Property<int>("Geographical_ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Geographical_ActivityId"), 1L, 1);

                    b.Property<string>("Actual_Year_A")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Actual_Year_B")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<long?>("Budget_Allocation_A")
                        .HasColumnType("bigint");

                    b.Property<long?>("Budget_Allocation_B")
                        .HasColumnType("bigint");

                    b.Property<string>("Proposed_Year_A")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Proposed_Year_B")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Remark_A")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Remark_B")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Geographical_ActivityId");

                    b.ToTable("GeographicalActivity", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.GEOPHYSICAL_ACTIVITIES_ACQUISITION", b =>
                {
                    b.Property<int>("Geophysical_ActivitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Geophysical_ActivitiesId"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Actual_year_aquired_data")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Budeget_Allocation")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Budeget_Allocation_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Budeget_Allocation_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Gas_Sales_Royalty_Payment")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gas_flare_Royalty_payment")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Geo_Activity_Timeline")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_Completion_Status")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_Record_Length_of_Data")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_acquired_geophysical_data")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_area_of_coverage")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_method_of_acquisition")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_type_of_data_acquired")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name_of_Contractor")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<int?>("No_of_Folds")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("QUATER")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Quantum")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Quantum_Approved")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Quantum_Planned")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Quantum_carry_forward")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("proposed_year_data")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Geophysical_ActivitiesId")
                        .HasName("PK_Geophysical_Activities");

                    b.ToTable("GEOPHYSICAL_ACTIVITIES_ACQUISITION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.GEOPHYSICAL_ACTIVITIES_PROCESSING", b =>
                {
                    b.Property<int>("Geophysical_Activities_ProcessingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Geophysical_Activities_ProcessingId"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Actual_year_aquired_data")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Budeget_Allocation")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Budeget_Allocation_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Budeget_Allocation_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Geo_Activity_Timeline")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_Any_Ongoing_Processing_Project")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_Completion_Status")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_Quantum_of_Data")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_Quantum_of_Data_carry_over")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_Type_of_Data_being_Processed")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Interpreted_Actual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Interpreted_Proposed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name_of_Contractor")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("No_of_Folds")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Processed_Actual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Processed_Proposed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("QUATER")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Quantum_Approved")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Quantum_Planned")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Reprocessed_Actual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reprocessed_Proposed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("proposed_year_data")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Geophysical_Activities_ProcessingId");

                    b.ToTable("GEOPHYSICAL_ACTIVITIES_PROCESSING", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Geophysical_Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activity_Timeline")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Activity_Timeline_pro")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_Processed_Reprocessed_Interpreted_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_Year_Acquired")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Any_Ongoing_Processing_Project")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Any_acquired_geophysical_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Area_of_Coverage")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_Allocation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_Allocation_pro")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Completion_Status")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Completion_Status_pro")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Method_of_Acquisition")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_year_processing")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Quantum_Carry_Forward")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Quantum_Carry_Forward_pro")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Quantum_of_Data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Quantum_of_Data_pro")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Record_Length_of_Data")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Remarks_pro")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Type_of_Data_Acquired")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Type_of_Data_being_Processed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Geophysical_Activities");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE", b =>
                {
                    b.Property<int>("HSE_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HSE_Id"), 1L, 1);

                    b.Property<long?>("Accident_Stat")
                        .HasColumnType("bigint");

                    b.Property<int?>("Qty_Spilled")
                        .HasColumnType("int");

                    b.Property<string>("Relevant_Certificate")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("HSE_Id");

                    b.ToTable("HSE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ACCIDENT_INCIDENCE_REPORTING_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("If_YES_were_they_reported")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UploadIncidentStatisticsFilename")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("UploadIncidentStatisticsPath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Was_there_any_accident_incidence")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ACCIDENT_INCIDENCE_REPORTING_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cause")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consequence")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Date_")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Investigation")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Lesson_Learnt")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Location")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type_of_Accident_Incidence")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ASSET_REGISTER_TEMPLATE_PRESCRIPTIVE_EQUIPMENT_INSPECTION_STRATEGY_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Condition_of_Equipment")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Equipment_Inspected_as_and_when_due")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<DateTime?>("Equipment_Installation_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Equipment_description")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Equipment_manufacturer")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Equipment_serial_number")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Equipment_tag_number")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Equipment_type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Function_Test_Result")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Inspection_Report_Review")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Last_Inspection_Type_Performed")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<DateTime?>("Last_inspection_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Next_Inspection_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_Inspection_Type")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("State_reason")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("facility")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ASSET_REGISTER_TEMPLATE_PRESCRIPTIVE_EQUIPMENT_INSPECTION_STRATEGY_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ASSET_REGISTER_TEMPLATE_RBI_EQUIPMENT_INSPECTION_STRATEGY_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Condition_of_Equipment")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Consequence_of_Failure")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Equipment_Inspected_as_and_when_due")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<DateTime?>("Equipment_Installation_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Equipment_description")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Equipment_manufacturer")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Equipment_serial_number")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Equipment_tag_number")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Equipment_type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Function_Test_Result")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Inspection_Report_Review")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Last_Inspection_Type_Performed")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<DateTime?>("Last_inspection_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Likelihood_of_Failure")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Maximum_Inspection_Interval")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<DateTime?>("Next_Inspection_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_Inspection_Type")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<DateTime?>("RBI_Assessment_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("State_reason")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("facility")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ASSET_REGISTER_TEMPLATE_RBI_EQUIPMENT_INSPECTION_STRATEGY_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_CAUSES_OF_SPILL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Corrosion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Equipment_Failure")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Erossion_waves_sand")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Human_Error")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Mystery")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Operational_Maintenance_Error")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Sabotage")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Total_Quantity_Recovered")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Total_Quantity_Spilled")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("YTBD")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("no_of_spills_reported")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("HSE_CAUSES_OF_SPILL", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_CLIMATE_CHANGE_AND_AIR_QUALITY", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("DoyouhaveGHG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("GHGFilePath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("GHGFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("HSE_CLIMATE_CHANGE_AND_AIR_QUALITY", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_COMMUNITY_DISTURBANCES_AND_OIL_SPILL_COST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Action_plan_for_PROPOSED_YEAR")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cost_involved_")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Effect_on_your_operations_")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("No_of_casual_Fatality_")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Possible_causes_")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Total_days_lost_")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_COMMUNITY_DISTURBANCES_AND_OIL_SPILL_COST", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_COMMUNITY_DISTURBANCES_AND_OIL_SPILL_COST_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Action_Plan_for_")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cost_involved")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Effect_on_your_operations")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("If_YES_Give_details_on_Community_Related_Disturbances_within_your_operational_area")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("No_of_casual_Fatality")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Oil_spill_reported")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Possible_causes")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Total_days_lost")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Was_any_Oil_Spill_recorded_within_your_operational_area")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Was_there_any_Community_Related_Disturbances_within_your_operational_area")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_COMMUNITY_DISTURBANCES_AND_OIL_SPILL_COST_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_COMMUNITY_DISTURBANCES_AND_OIL_SPILL_COST_NUMBER_AND_QUALITY_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("NUMBER")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Quantity_Recovered")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Quantity_spilled")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_COMMUNITY_DISTURBANCES_AND_OIL_SPILL_COST_NUMBER_AND_QUALITY_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_DESIGNS_SAFETY", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Current_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DESIGNS_SAFETY_Current_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DESIGNS_SAFETY_Proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DESIGNS_SAFETY_Type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_DESIGNS_SAFETY", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_EFFLUENT_MONITORING_COMPLIANCE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AreThereEvidentOfSampling")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("EvidenceOfSamplingFilename")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("EvidenceOfSamplingPath")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OmL_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReasonForNoEvidenceSampling")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("HSE_EFFLUENT_MONITORING_COMPLIANCE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ENVIRONMENTAL_COMPLIANCE_MONITORING_CHEMICAL_USAGE_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DPR_Approved")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name_of_Chemical")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Quarter_1")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Quarter_2")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Quarter_3")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Quarter_4")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ENVIRONMENTAL_COMPLIANCE_MONITORING_CHEMICAL_USAGE_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ENVIRONMENTAL_COMPLIANCE_MONITORING_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Are_you_a_Producing_or_Non_Producing_Company")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Have_you_submitted_your_Chemical_Usage_Inventorization_Report")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Have_you_submitted_your_Environmental_Compliance_Report")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("If_NO_Give_reasons_for_non_SUBMISSION")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("If_NO_Give_reasons_for_non_submission_2")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("If_NO_give_reasons_for_not_registering_your_Point_Sources")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("If_YES_have_you_registered_your_Point_Sources")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ENVIRONMENTAL_COMPLIANCE_MONITORING_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ENVIRONMENTAL_COMPLIANCE_MONITORING_TYPE_OF_REPORT_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Quarter_1")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Quarter_2")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Quarter_3")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Quarter_4")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type_of_Report")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ENVIRONMENTAL_COMPLIANCE_MONITORING_TYPE_OF_REPORT_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ENVIRONMENTAL_IMPACT_ASSESSMENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("In_progress_Started_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Pre_Impact_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ENVIRONMENTAL_IMPACT_ASSESSMENTS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ENVIRONMENTAL_MANAGEMENT_PLAN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AreThereEMP")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("FacilityLocation")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FacilityType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("OmL_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RemarkIfNoEMP")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ENVIRONMENTAL_MANAGEMENT_PLAN", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ENVIRONMENTAL_MANAGEMENT_SYSTEM", b =>
                {
                    b.Property<string>("AUDITFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("AUDITFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("EMSFilePath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("EMSFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("HSE_ENVIRONMENTAL_MANAGEMENT_SYSTEM", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ENVIRONMENTAL_STUDIES_FIVE_YEAR_STRATEGIC_PLAN_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type_of_Study_IA_or_EES")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("YEAR_")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ENVIRONMENTAL_STUDIES_FIVE_YEAR_STRATEGIC_PLAN_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ENVIRONMENTAL_STUDIES_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Any_Environmental_Studies")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("If_Ongoing")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("If_YES_state_Project_Name")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Status_")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ENVIRONMENTAL_STUDIES_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_ENVIRONMENTAL_STUDIES_NEW_UPDATED", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DPR_approval_Status")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("current_study_status")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("field_name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("study_title")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("type_of_study")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("HSE_ENVIRONMENTAL_STUDIES_NEW_UPDATED", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_FATALITy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Current_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_year_DATA")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Fatalities_Current_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fatalities_Proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fatalities_Type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_year_DATA")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("type_of_incidence")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HSE_FATALITIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_GHG_MANAGEMENT_PLAN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanY_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("DoYouHaveGHG")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DoYouHaveLDRCertificate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("GHGApprovalFilename")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("GHGApprovalPath")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("LDRCertificateFilename")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("LDRCertificatePath")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("OmL_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OmL_Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReasonForNoGHG")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("ReasonForNoLDR")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("companyemail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_GHG_MANAGEMENT_PLAN", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_HOST_COMMUNITIES_DEVELOPMENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("DoYouHaveEvidenceOfPay")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DoYouHaveEvidenceOfReg")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EvidenceOfPayTrustFundFilename")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("EvidenceOfPayTrustFundPath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("EvidenceOfRegTrustFundFilename")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("EvidenceOfRegTrustFundPath")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("OmL_ID")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReasonForNoEvidenceOfPayTF")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("ReasonForNoEvidenceOfRegTF")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UploadCommDevPlanApprovalFilename")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("UploadCommDevPlanApprovalPath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("HSE_HOST_COMMUNITIES_DEVELOPMENT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_INSPECTION_AND_MAINTENANCE_FACILITY_TYPE_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Facility_Type")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("If_No_Give_reasonS")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("If_RBI_was_approval_granted")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name_of_facility")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type_of_Inspection_and_Maintenance")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("When_was_it_carried_out")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("was_the_inspection_and_maintenemce")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HSE_INSPECTION_AND_MAINTENANCE_FACILITY_TYPE_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_INSPECTION_AND_MAINTENANCE_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("If_No_Give_reasonS")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("If_RBI_was_approval_granted")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Is_the_inspection_philosophy_Prescriptive_or_RBI_for_each_facility")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Was_Inspection_and_Maintenance_of_each_of_your_facility_carried_out")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_INSPECTION_AND_MAINTENANCE_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_MANAGEMENT_POSITION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OrganogramrFilePath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("OrganogramrFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PromotionLetterFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PromotionLetterFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_MANAGEMENT_POSITION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_MinimumRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ConcessionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<int?>("FieldID")
                        .HasColumnType("int");

                    b.Property<string>("Is_Company_ISO45001_Certified")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Provide_ISO45001_Certification_No")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HSE_MinimumRequirement", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_OIL_SPILL_INCIDENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Number_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Quantity_Recovered_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Quantity_spilled_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_OIL_SPILL_INCIDENT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_OIL_SPILL_REPORTING_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cause_of_spill")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_of_Spill")
                        .HasColumnType("datetime");

                    b.Property<string>("Facility_Equipment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Incident_Oil_Spill_Ref_No")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LGA")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Location")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("State_")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type_of_operation_at_spill_site")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Volume_of_spill_bbls")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Volume_recovered_bbls")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_OIL_SPILL_REPORTING_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_OPERATIONS_SAFETY_CASE", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Does_the_Facility_Have_a_Valid_Safety_Case")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Evidence_of_Operations_Safety_Case_Approval")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Location_of_Facility")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Name_Of_Facility")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Number_of_Facilities")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reason_If_No_Evidence")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Type_of_Facility")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable("HSE_OPERATIONS_SAFETY_CASE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_OSP_REGISTRATIONS_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DESCRIPTION_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("VALUES_")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_OSP_REGISTRATIONS_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_POINT_SOURCE_REGISTRATION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_ID")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Company_Number")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OML_ID")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("are_there_point_source_permit")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("evidence_of_PSP_filename")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("evidence_of_PSP_path")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("reason_for_no_PSP")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.HasKey("Id");

                    b.ToTable("HSE_POINT_SOURCE_REGISTRATION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_PRODUCED_WATER_MANAGEMENT_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Export_to_Terminal_with_fluid")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Within_which_zone_are_you_operating")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("how_do_you_handle_your_produced_water")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.HasKey("Id");

                    b.ToTable("HSE_PRODUCED_WATER_MANAGEMENT_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_PRODUCED_WATER_MANAGEMENT_NEW_UPDATED", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Concession")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DEPTH_AND_DISTANCE_FROM_SHORELINE")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("DPR_APPROVAL_STATUS")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Disposal_philosophy")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("FIELD_NAME")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Produced_water_volumes")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("facilities")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.HasKey("Id");

                    b.ToTable("HSE_PRODUCED_WATER_MANAGEMENT_NEW_UPDATED", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_QUALITY_CONTROL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("DoyouhaveQualityControl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("QualityControlFilePath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("QualityControlFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Valid_Accreditation_Letter_For_QualityControl")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_QUALITY_CONTROL", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_QUESTION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Accident_Stat")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Qty_Spilled")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Relevant_Certificate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_QUESTIONS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_REMEDIATION_FUND", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_ID")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Company_Number")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OML_ID")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("evidenceOfPaymentFilename")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("evidenceOfPaymentPath")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("reasonForNoRemediation")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.HasKey("Id");

                    b.ToTable("HSE_REMEDIATION_FUND", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SAFETY_STUDIES_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Did_you_carry_out_safety_studies")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("DoyouhaveSMSinPlace")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("List_identified_Major_Accident_Hazards_for_the_study")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("List_the_Safeguards_based_on_the_identified_Major_Accident_Hazards")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("List_the_studies")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SMSFileUploadPath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("State_Project_Name_for_which_studies_was_carried_out")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_SAFETY_STUDIES_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_CSR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_Spent_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CSR_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Percentage_Completion_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_CSR", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_CSR_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_Proposed_Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Actual_Spent")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_proposed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Beneficiary_Communities")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Budget_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CSR_")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Percentage_Completion_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_CSR_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_CSR_NEW_Scholarship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_Proposed_Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Actual_Spent")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_proposed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Beneficiary_Communities_National")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Beneficiary_Communities_host")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Budget_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CSR_")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Percentage_Completion_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_CSR_NEW_Scholarships");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_CSR_NEW_Training_Skill_Acquisition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_Proposed_Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Actual_Spent")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_proposed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Beneficiary_Communities_National")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Beneficiary_Communities_host")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Budget_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CSR_")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Percentage_Completion_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_CSR_NEW_Training_Skill_Acquisition", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_MOU", b =>
                {
                    b.Property<string>("Actual_Budget_Total_Dollars")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Beneficiary_Community")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Component_of_project")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MOUUploadFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MOUUploadFilename")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Project_Location")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Status_Of_Project")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type_of_project_excuted")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_GMou_was_signed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_MOU", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_PLANNED_AND_ACTUAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Description_of_Projects_Actual")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Description_of_Projects_Planned")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_PLANNED_AND_ACTUAL", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_QUESTION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Do_you_have_an_MOU_with_the_communities_for_all_your_assets")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Have_you_submitted_all_MoUs_to_DPR")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("If_NO_why")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MOUOSCPFilePath")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MOUOSCPFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MOUResponderFilePath")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MOUResponderFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MOUResponderInPlace")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_QUESTION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_SCHOLASHIP_SCHEME", b =>
                {
                    b.Property<string>("Actual_Budget_Total_Dollars")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ComponentOfScholarship")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameOfCommunity")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SSUploadFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SSUploadFilename")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ScholarshipYear")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_GMou_was_signed")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_SCHOLASHIP_SCHEME", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_TRAINING_SCHEME", b =>
                {
                    b.Property<string>("Actual_Budget_Total_Dollars")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ComponentOfTraining")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameOfCommunity")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("StatusOfTraining")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TSUploadFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TSUploadFilename")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TrainingYear")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_GMou_was_signed")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("HSE_SUSTAINABLE_DEVELOPMENT_COMMUNITY_PROJECT_PROGRAM_TRAINING_SCHEME", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_TECHNICAL_SAFETY_CONTROL_STUDIES_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("approval_status")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("facility")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("facility_location")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("number_of_facilities")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("remarks")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("study_type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("type_of_facility")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HSE_TECHNICAL_SAFETY_CONTROL_STUDIES_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_WASTE_MANAGEMENT_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Are_Registered_Point_Sources_Valid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Commitment_To_Waste_Management")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Do_you_have_Waste_Management_facilities")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Evidence_Of_Submission_Of_Journey_MGT_Plan")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Evidence_Of_Submission_Of_PreviousYears_Waste_Release")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<double?>("How_Much_Is_Budgeted_For_Waste_MGT_Plan")
                        .HasColumnType("float");

                    b.Property<string>("If_NO_give_reasons_for_not_being_registered")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("If_YES_is_the_facility_registered")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_WASTE_MANAGEMENT_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_WASTE_MANAGEMENT_SYSTEM", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("DecomCertificateFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DecomCertificateFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WasteManagementPlanFilePath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("WasteManagementPlanFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("HSE_WASTE_MANAGEMENT_SYSTEM", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.HSE_WASTE_MANAGEMENT_TYPE_OF_FACILITY_NEW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTUAL_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Approved_or_Not_Approve")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("LOCATION")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PROPOSED_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type_of_Facility")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HSE_WASTE_MANAGEMENT_TYPE_OF_FACILITY_NEW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Initial_Well_Completion_Job", b =>
                {
                    b.Property<int>("Initial_Well_CompletionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Initial_Well_CompletionId"), 1L, 1);

                    b.Property<string>("Actual_No_Current_Year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Actual_No_Proposed_Year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Budget_Allocation_Proposed_Year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Do_you_have_approval_to_complete_the_well")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Processing_Fees_Paid")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Remark")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Year_of_WorkProgram")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Initial_Well_CompletionId")
                        .HasName("PK_Initial_Well_Completion");

                    b.ToTable("Initial_Well_Completion_Job", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Legal", b =>
                {
                    b.Property<int>("Legal_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Legal_Id"), 1L, 1);

                    b.Property<string>("Company_Fined")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Company_FinedReason")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Company_Sanctioned")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("Legal_Id");

                    b.ToTable("Legal", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.LEGAL_ARBITRATION", b =>
                {
                    b.Property<string>("AnyLitigation")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Any_orders_made_so_far_by_the_court")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Case_Number")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Jurisdiction")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name_of_Court")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Names_of_Parties")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Potential_outcome")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Summary_of_the_case")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("LEGAL_ARBITRATION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.LEGAL_LITIGATION", b =>
                {
                    b.Property<string>("AnyLitigation")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Any_orders_made_so_far_by_the_court")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Case_Number")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Jurisdiction")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name_of_Court")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Names_of_Parties")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Potential_outcome")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Summary_of_the_case")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("LEGAL_LITIGATION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.LOCAL_CONTENT_AND_HUMAN_CAPACITY_DEVELOPMENT_PROGRAMME", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_Current_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_Current_year_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_year_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("LOCAL_CONTENT_AND_HUMAN_CAPACITY_DEVELOPMENT_PROGRAMMES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.LOCAL_CONTENT_AND_HUMAN_CAPACITY_DEVELOPMENT_PROGRAMMES_and_Nigeria_Content_Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Foreign_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Local_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Training_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("LOCAL_CONTENT_AND_HUMAN_CAPACITY_DEVELOPMENT_PROGRAMMES_and_Nigeria_Content_Training", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.LOCAL_CONTENT_AND_HUMAN_CAPACITY_DEVELOPMENT_PROGRAMMES_Expatriate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Expatriate_Quota_projection_for_proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("List_of_Expatriate_positions_that_will_expire")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("List_of_Understudies_that_had_successfully_taken_over_from_expatriates_in_the_last_4_years")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("LOCAL_CONTENT_AND_HUMAN_CAPACITY_DEVELOPMENT_PROGRAMMES_Expatriate", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.LOCAL_CONTENT_AND_HUMAN_CAPACITY_DEVELOPMENT_PROGRAMMES_Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Foreign_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Local_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Training_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("LOCAL_CONTENT_AND_HUMAN_CAPACITY_DEVELOPMENT_PROGRAMMES_Training", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.LocalContent", b =>
                {
                    b.Property<int>("Local_ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Local_ContentId"), 1L, 1);

                    b.Property<string>("Actual_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Expatriate_Quota_Projection")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("List_of_Expiry_Expatriate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("List_of_Understudies")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Proposed_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("Local_ContentId");

                    b.ToTable("LocalContent", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Menu", b =>
                {
                    b.Property<string>("MenuId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IconName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<byte?>("SeqNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("MenuId");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("AppId")
                        .HasColumnType("int");

                    b.Property<string>("UserType")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("companyID")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("read")
                        .HasColumnType("int");

                    b.Property<string>("sender_id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("staffID")
                        .HasColumnType("int");

                    b.Property<string>("subject")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.MyDesk", b =>
                {
                    b.Property<int>("DeskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeskID"), 1L, 1);

                    b.Property<int?>("AppId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FromSBU")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FromStaffID")
                        .HasColumnType("int");

                    b.Property<bool>("HasPushed")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWork")
                        .HasColumnType("bit");

                    b.Property<int>("ProcessID")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("DeskID")
                        .HasName("PK_MyDesk_UT");

                    b.ToTable("MyDesks");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.NDPR_SUBSCRIPTION_FEE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Data_Type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Did_you_process_data_for_current_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Has_annual_NDR_subscription_fee_been_paid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Volume_of_data_processed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("NDPR_SUBSCRIPTION_FEE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.NDR", b =>
                {
                    b.Property<string>("Are_you_up_to_date_with_your_NDR_data_submission")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Has_annual_NDR_subscription_fee_been_paid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NDRFilename")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Upload_NDR_payment_receipt")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("When_was_the_date_of_your_last_NDR_submission")
                        .HasColumnType("date");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("NDR", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.NDR_Data_Population", b =>
                {
                    b.Property<int>("NDRDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NDRDataId"), 1L, 1);

                    b.Property<string>("Actual_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Annual_Sub_Fee")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Data_Type")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Processed_Data")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Proposed_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Reason_For_Non_Payment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Reason_Non_Processed_Data")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Subscription_Fee_Upload")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("NDRDataId");

                    b.ToTable("NDR_Data_Population", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.NDR_DATA_POPULATION_ON_BLOCK_BASI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_YEAR_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_year_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("NDR_DATA_POPULATION_ON_BLOCK_BASIS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.NIGERIA_CONTENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Do_you_have_a_valid_Expatriate_Quota_for_your_foreign_staff")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("If_NO_why")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_there_a_succession_plan_in_place")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Number_of_staff_released_within_the_year_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("NIGERIA_CONTENT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.NIGERIA_CONTENT_QUESTION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Do_you_have_a_valid_Expatriate_Quota_for_your_foreign_staff")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("If_NO_why")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_there_a_succession_plan_in_place")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Number_of_staff_released_within_the_year_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("total_no_of_nigeria_senior_staff")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("total_no_of_senior_staff")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("total_no_of_top_management_staff")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("total_no_of_top_nigerian_management_staff")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("NIGERIA_CONTENT_QUESTION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.NIGERIA_CONTENT_Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_Proposed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Actual_Proposed_Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Expatriate_quota_positions")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Foreign_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Local_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Management_Foriegn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Management_Local")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nigerian_Understudies")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Staff_Foriegn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Staff_Local")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Training_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Utilized_EQ")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("NIGERIA_CONTENT_Training", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.NIGERIA_CONTENT_Upload_Succession_Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_Proposed_Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Actual_proposed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Position_Occupied_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Timeline_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Understudy_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("NIGERIA_CONTENT_Upload_Succession_Plan", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.NigerianContent", b =>
                {
                    b.Property<int>("Nigerian_ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Nigerian_ContentId"), 1L, 1);

                    b.Property<int?>("Mgt_Expatriates")
                        .HasColumnType("int");

                    b.Property<int?>("Mgt_Local")
                        .HasColumnType("int");

                    b.Property<int?>("Nbr_of_Released_Staff")
                        .HasColumnType("int");

                    b.Property<string>("Position_Occupied")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reason_For_NonExpatriate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Staff_Expatriates")
                        .HasColumnType("int");

                    b.Property<int?>("Staff_Local")
                        .HasColumnType("int");

                    b.Property<string>("Succession_PlanName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Succession_PlanTimeLine")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Succession_PlanUnderStudy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Succession_Plan_in_Place")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Valid_Expatriate")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("Nigerian_ContentId");

                    b.ToTable("NigerianContent", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_AND_GAS_FACILITY_MAINTENANCE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_capital_expenditure_Current_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Approval_License_Permits")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_Performance")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CAPEX_Oversight")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Challenges")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Comment_")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Completion_Status")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Conceptual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Conformity_Assessment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Construction_Commissioning_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Detailed_Engineering")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FEED")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Has_it_been_adopted_by_DPR_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Major_Projects")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("New_Technology_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Objective_Drivers_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Planned_ongoing_and_routine_maintenance")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Production_Product_Offtakers")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Project_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_Capital_Expenditure")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OIL_AND_GAS_FACILITY_MAINTENANCE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_AND_GAS_FACILITY_MAINTENANCE_EXPENDITURE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_capital_expenditure_Current_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_capital_expenditure_Current_year_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Actual_capital_expenditure_Current_year_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_Capital_Expenditure")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_Capital_Expenditure_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Proposed_Capital_Expenditure_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OIL_AND_GAS_FACILITY_MAINTENANCE_EXPENDITURE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_AND_GAS_FACILITY_MAINTENANCE_PROJECT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_Proposed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Actual_Proposed_year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Actual_capital_expenditure_Current_year_NGN")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_capital_expenditure_Current_year_USD")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Approval_License_Permits")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Budget_Performance")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CAPEX_Oversight")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Challenges")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Comment_")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Completion_Status")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Conceptual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Conformity_Assessment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Construction_Commissioning_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Detailed_Engineering")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FEED")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Has_it_been_adopted_by_DPR_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Major_Projects")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("New_Technology_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nigerian_Content_Value")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Objective_Drivers_")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Planned_ongoing_and_routine_maintenance")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Product_Off_takers")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Production_Product_Offtakers")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Project_Stage")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Project_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_Capital_Expenditure_NGN")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_Capital_Expenditure_USD")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OIL_AND_GAS_FACILITY_MAINTENANCE_PROJECTS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_CONDENSATE_PRODUCTION_ACTIVITIES_FIVE_YEAR_PROJECTION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Committees_been_inaugurated")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Name_OP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cost_Barrel")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Current_year_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Daily_Production_")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Deferment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Did_you_carry_out_any_well_test")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Fiveyear_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fiveyear_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_NAG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fiveyear_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Forecast")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Has_DPR_been_notified")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Has_the_CA_been_signed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Has_the_PUA_been_signed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Has_the_UUOA_been_signed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Has_the_other_party_been_notified")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("How_many_fields_straddle")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_any_of_your_field_straddling")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_there_a_Joint_Development")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Maximum_Efficiency_Rate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Number_of_Producing_Wells")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number_of_Test_Carried_out")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Participation_been_determined")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prod_Status_OC")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prod_Status_OP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProductionOilCondensateAGNAGUFilename")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ProductionOilCondensateAGNAGUploadFilePath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Straddling_Field_OP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Straddling_Fields_OC")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Total_Reconciled_National_Crude_Oil_Production")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Type_of_Test")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("OIL_CONDENSATE_PRODUCTION_ACTIVITIES_FIVE_YEAR_PROJECTION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_PROPOSED", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avg_Daily_Production")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Gas_AG")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gas_NAG")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Production")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Production_month")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Production_month_id")
                        .HasColumnType("int");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_PROPOSED", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avg_Daily_Production")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Gas_AG")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gas_NAG")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Production")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Production_month")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Production_month_id")
                        .HasColumnType("int");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_CONDENSATE_PRODUCTION_ACTIVITIES_New_Technology_Conformity_Assessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Benefits")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Challenges")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cost")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DPR_Consent")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Existing_Alternatives")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Objective")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OIL_CONDENSATE_PRODUCTION_ACTIVITIES_New_Technology_Conformity_Assessment", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_CONDENSATE_PRODUCTION_ACTIVITIES_Operating_Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Operating_Facilities")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OIL_CONDENSATE_PRODUCTION_ACTIVITIES_Operating_Facilities");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_CONDENSATE_PRODUCTION_ACTIVITIES_UNITIZATION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Committees_been_inaugurated")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Name_OP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cost_Barrel")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Current_year_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Daily_Production_")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Deferment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Did_you_carry_out_any_well_test")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Fiveyear_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fiveyear_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_NAG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fiveyear_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Forecast")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Has_DPR_been_notified")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Has_the_CA_been_signed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Has_the_PUA_been_signed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Has_the_UUOA_been_signed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Has_the_other_party_been_notified")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("How_many_fields_straddle")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_any_of_your_field_straddling")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_there_a_Joint_Development")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Maximum_Efficiency_Rate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Number_of_Producing_Wells")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number_of_Test_Carried_out")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Oil_Royalty_Payment")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PUAUploadFilePath")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PUAUploadFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Participation_been_determined")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prod_Status_OC")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prod_Status_OP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Straddling_Field_OP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Straddling_Fields_OC")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Total_Reconciled_National_Crude_Oil_Production")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Type_of_Test")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("UUOAUploadFilePath")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UUOAUploadFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("straddle_field_producing")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("what_concession_field_straddling")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OIL_CONDENSATE_PRODUCTION_ACTIVITIES_UNITIZATION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OIL_CONDENSATE_PRODUCTION_ACTIVITy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Committees_been_inaugurated")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Name_OP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cost_Barrel")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Current_year_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Daily_Production_")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Deferment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Did_you_carry_out_any_well_test")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Fiveyear_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fiveyear_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_NAG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fiveyear_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Forecast")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Gas_AG")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gas_NAG")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Has_DPR_been_notified")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Has_the_CA_been_signed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Has_the_PUA_been_signed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Has_the_UUOA_been_signed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Has_the_other_party_been_notified")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("How_many_fields_straddle")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_any_of_your_field_straddling")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Is_there_a_Joint_Development")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Maximum_Efficiency_Rate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Number_of_Producing_Wells")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number_of_Test_Carried_out")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Oil_Royalty_Payment")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Participation_been_determined")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prod_Status_OC")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prod_Status_OP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Straddling_Field_OP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Straddling_Fields_OC")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Total_Reconciled_National_Crude_Oil_Production")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Type_of_Test")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("straddle_field_producing")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("what_concession_field_straddling")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OIL_CONDENSATE_PRODUCTION_ACTIVITIES", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OilCondensateProduction", b =>
                {
                    b.Property<int>("Oil_Condensate_ProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oil_Condensate_ProductionId"), 1L, 1);

                    b.Property<string>("Actual_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("Cost_Barrel")
                        .HasColumnType("int");

                    b.Property<string>("Deferment")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Forecast")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Oil_Condensate_ProductionId");

                    b.ToTable("OilCondensateProduction", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.OilSpill_Incident", b =>
                {
                    b.Property<int>("Oil_Spill_IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oil_Spill_IncidentId"), 1L, 1);

                    b.Property<string>("Action_Plan")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Cost_Involved")
                        .HasColumnType("int");

                    b.Property<string>("Effect_on_Operation")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Evidence_Of_MOUs_With_CAN")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Evidence_Of_QuaterlySubmissions_Of_OilField_Chemicals")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("InProgress_StartedYr")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("Nbr_of_Fatality")
                        .HasColumnType("int");

                    b.Property<int?>("Number_Qty_Spilled")
                        .HasColumnType("int");

                    b.Property<string>("Possible_Cost")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Pre_Impact")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Proof_Of_Submission_Of_Valid_OSCP")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Proposed_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("Qty_Recovered")
                        .HasColumnType("int");

                    b.Property<int?>("Total_Days_Lost")
                        .HasColumnType("int");

                    b.HasKey("Oil_Spill_IncidentId");

                    b.ToTable("OilSpill_Incident", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.PermitApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AppID")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateExpired")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("DateIssued")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("ElpsID")
                        .HasColumnType("int");

                    b.Property<string>("IsRenewed")
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.Property<string>("PermitNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Printed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PermitApprovals");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.PICTURE_UPLOAD_COMMUNITY_DEVELOPMENT_PROJECT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("uploaded_presentation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("PICTURE_UPLOAD_COMMUNITY_DEVELOPMENT_PROJECTS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Planning_MinimumRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ConcessionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<int?>("FieldID")
                        .HasColumnType("int");

                    b.Property<string>("ReservesRevenue_GrossProduction")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReservesRevenue_RemainingReserves")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Planning_MinimumRequirement", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.PRESENTATION_UPLOAD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("check_status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("original_filemane")
                        .HasMaxLength(2500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2500)");

                    b.Property<string>("upload_extension")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("uploaded_presentation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("PRESENTATION_UPLOAD", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Reserve_Update_Oil_Condensate", b =>
                {
                    b.Property<int>("Reserve_UpdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Reserve_UpdateId"), 1L, 1);

                    b.Property<string>("Additional_Reserves")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("P1_Reserve")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Reserves")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<long?>("Total_Production")
                        .HasColumnType("bigint");

                    b.HasKey("Reserve_UpdateId");

                    b.ToTable("Reserve_Update_Oil_Condensate", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_REPLACEMENT_RATIO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RESERVES_REPLACEMENT_RATIO_VALUE")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Trend_Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_REPLACEMENT_RATIO", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_DEPLETION_RATE", b =>
                {
                    b.Property<string>("AG")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CONDENSATE")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NAG")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OIL")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("RESERVES_UPDATES_DEPLETION_RATE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_LIFE_INDEX", b =>
                {
                    b.Property<string>("AG")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CONDENSATE")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NAG")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OIL")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("RESERVES_UPDATES_LIFE_INDEX", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_OIL_CONDENSATE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Additional_Reserves_as_at_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_Annual_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Annual_AnnualOilProduction")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Annual_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Annual_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Annual_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Annual_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Current_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Current_AnnualOilProduction")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Current_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Current_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Current_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Current_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Reserves_AnnualOilProduction")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Fiveyear_Projection_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fiveyear_Projection_AnnualOilProduction")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Projection_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Projection_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Projection_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Projection_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Reserves_Addition_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reserves_Addition_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Addition_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Addition_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Addition_Reason_for_Addition")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Addition_Was_there_any_Reserve_Addition")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Decline_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reserves_Decline_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Decline_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Decline_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Decline_Reason_for_Decline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Decline_Was_there_a_decline_in_reserve")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_as_at_MMbbl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Reserves_as_at_MMbbl_P1")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_GOR")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_Reservoir")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_Reservoir_Pressure")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Reservoir_Performance_Reservoir Pressure");

                    b.Property<string>("Reservoir_Performance_Sand_Cut")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_WCT")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Total_Production_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_UPDATES_OIL_CONDENSATE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_OIL_CONDENSATE_Company_Annual_PRODUCTION", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_Annual_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Annual_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Annual_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Annual_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Annual_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_UPDATES_OIL_CONDENSATE_Company_Annual_PRODUCTION", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_OIL_CONDENSATE_CURRENT_RESERVE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_Reserves_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Reserves_AnnualOilProduction")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_UPDATES_OIL_CONDENSATE_CURRENT_RESERVE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_OIL_CONDENSATE_Fiveyear_Projection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Fiveyear_Projection_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fiveyear_Projection_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Projection_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Projection_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fiveyear_Projection_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_UPDATES_OIL_CONDENSATE_Fiveyear_Projection", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_OIL_CONDENSATE_MMBBL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Additional_Reserves_as_at_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Reserves_as_at_MMbbl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_as_at_MMbbl_P1")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_as_at_MMbbl_condensate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reserves_as_at_MMbbl_gas")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Total_Production_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_UPDATES_OIL_CONDENSATE_MMBBL", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_OIL_CONDENSATE_Reserves_Addition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Reserves_Addition_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reserves_Addition_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Addition_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Addition_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Addition_Reason_for_Addition")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Addition_Was_there_any_Reserve_Addition")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_UPDATES_OIL_CONDENSATE_Reserves_Addition", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_OIL_CONDENSATE_Reserves_DECLINE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Reserves_Decline_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reserves_Decline_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Decline_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Decline_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Decline_Reason_for_Decline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reserves_Decline_Was_there_a_decline_in_reserve")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_UPDATES_OIL_CONDENSATE_Reserves_DECLINE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_OIL_CONDENSATE_RESERVOIR_PERFORMANCE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Reservoir_Performance_GOR")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_Reservoir")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_Reservoir_Pressure")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_Sand_Cut")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_Timeline")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Reservoir_Performance_WCT")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_UPDATES_OIL_CONDENSATE_RESERVOIR_PERFORMANCE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.RESERVES_UPDATES_OIL_CONDENSATE_STATUS_OF_RESERVE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Company_Reserves_AG")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Reserves_AnnualCondensateProduction")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Reserves_AnnualGasAGProduction")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Reserves_AnnualGasNAGProduction")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Reserves_AnnualGasProduction")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Company_Reserves_AnnualOilProduction")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_Condensate")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_NAG")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_Oil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Company_Reserves_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("FLAG1")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FLAG2")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RESERVES_UPDATES_OIL_CONDENSATE_STATUS_OF_RESERVE", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ROLES_", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SN"), 1L, 1);

                    b.ToTable("ROLES_", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.ROLES_SUPER_ADMIN", b =>
                {
                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Deleted_Date")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Deleted_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Deleted_status")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Email_")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Role_")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SN"), 1L, 1);

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("ROLES_SUPER_ADMIN", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Royalty", b =>
                {
                    b.Property<int>("Royalty_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Royalty_ID"), 1L, 1);

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Concession_ID")
                        .HasColumnType("int");

                    b.Property<string>("Concession_Rentals")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Crude_Oil_Royalty")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("date");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("Gas_Flare_Payment")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gas_Sales_Royalty")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Miscellaneous")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Royalty_ID");

                    b.ToTable("Royalty", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.SafetyManagement", b =>
                {
                    b.Property<int>("Safety_ManagementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Safety_ManagementId"), 1L, 1);

                    b.Property<string>("Current_Facilities")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Current_Year")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Design_Safety_Control")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Fatalities")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Previous_Facilities")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Previous_Year")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Safety_ManagementId");

                    b.ToTable("SafetyManagement", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.SBU_ApplicationComment", b =>
                {
                    b.Property<string>("ActionStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("AppID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SBU_Comment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("SBU_ID")
                        .HasColumnType("int");

                    b.Property<string>("SBU_Tables")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Staff_ID")
                        .HasColumnType("int");

                    b.ToTable("SBU_ApplicationComments");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.SBU_Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Records")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("SBU_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SBU_Records");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffID"), 1L, 1);

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("AdminCompanyInfo_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SignatureName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SignaturePath")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("StaffElpsID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StaffEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Staff_SBU")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("StaffID");

                    b.ToTable("staff");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.STRATEGIC_PLANS_ON_COMPANY_BASI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACTIVITIES")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("N_1_Q1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_1_Q2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_1_Q3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_1_Q4")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_2_Q1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_2_Q2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_2_Q3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_2_Q4")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_3_Q1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_3_Q2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_3_Q3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_3_Q4")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_4_Q1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_4_Q2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_4_Q3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_4_Q4")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_5_Q1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_5_Q2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_5_Q3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("N_5_Q4")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("STRATEGIC_PLANS_ON_COMPANY_BASIS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.StrategicBusinessUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SBU_Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SBU_Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("StrategicBusinessUnits");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.SubmittedDocument", b =>
                {
                    b.Property<int>("SubDocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubDocID"), 1L, 1);

                    b.Property<int?>("AppID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DocSource")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DocumentCategory")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("ElpsDocID")
                        .HasColumnType("int");

                    b.Property<int?>("LocalDocID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("YearOfWKP")
                        .HasColumnType("int");

                    b.HasKey("SubDocID");

                    b.ToTable("SubmittedDocuments");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.SubstainableDevelopment", b =>
                {
                    b.Property<int>("Substainable_DevelopmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Substainable_DevelopmentId"), 1L, 1);

                    b.Property<string>("Descript_of_Project_Actual")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Descript_of_Project_Planned")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Substainable_DevelopmentId");

                    b.ToTable("SubstainableDevelopment", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Sum_DRILLING_OPERATIONS_CATEGORIES_OF_WELL", b =>
                {
                    b.Property<string>("Category")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Number_of_Days_to_Total_Depth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Well_Status_and_Depth")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("spud_date")
                        .HasColumnType("date");

                    b.Property<string>("well_cost")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("well_name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.ToView("Sum_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Sum_GEOPHYSICAL_ACTIVITIES_ACQUISITION", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Geo_type_of_data_acquired")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name_of_Contractor")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Quantum")
                        .HasColumnType("float");

                    b.Property<double?>("Quantum_Approved")
                        .HasColumnType("float");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("Sum_GEOPHYSICAL_ACTIVITIES_ACQUISITION");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Sum_GEOPHYSICAL_ACTIVITIES_PROCESSING", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Geo_Type_of_Data_being_Processed")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name_of_Contractor")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Quantum_Approved")
                        .HasColumnType("float");

                    b.Property<double?>("Quantum_Processed")
                        .HasColumnType("float");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("Sum_GEOPHYSICAL_ACTIVITIES_PROCESSING");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Table_1", b =>
                {
                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("sn")
                        .HasColumnType("int");

                    b.ToTable("Table_1", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.Table_Detail", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"), 1L, 1);

                    b.Property<string>("SBU_ID")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TableName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("TableSchema")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("TableId");

                    b.ToTable("Table_Details");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.tbl_fruitanalysis", b =>
                {
                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("value")
                        .HasColumnType("int");

                    b.ToTable("tbl_fruitanalysis", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.TrainingForStaff", b =>
                {
                    b.Property<int>("Training_For_StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Training_For_StaffId"), 1L, 1);

                    b.Property<int?>("Junior_Staff_Foreign")
                        .HasColumnType("int");

                    b.Property<int?>("Junior_Staff_Local")
                        .HasColumnType("int");

                    b.Property<int?>("Mgt_Staff_Foreign")
                        .HasColumnType("int");

                    b.Property<int?>("Mgt_Staff_Local")
                        .HasColumnType("int");

                    b.Property<int?>("Partner_Staff_Foreign")
                        .HasColumnType("int");

                    b.Property<int?>("Partner_Staff_Local")
                        .HasColumnType("int");

                    b.Property<int?>("Regulator_Staff_Foreign")
                        .HasColumnType("int");

                    b.Property<int?>("Regulator_Staff_Local")
                        .HasColumnType("int");

                    b.Property<int?>("Senior_Staff_Foreign")
                        .HasColumnType("int");

                    b.Property<int?>("Senior_Staff_Local")
                        .HasColumnType("int");

                    b.HasKey("Training_For_StaffId");

                    b.ToTable("TrainingForStaff", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.UserLogin", b =>
                {
                    b.Property<long>("LoginPk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LoginPk"), 1L, 1);

                    b.Property<string>("UserId")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Browser")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LoginMessage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("LoginPk", "UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.UserMaster", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("UserRole")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("UserId");

                    b.ToTable("UserMaster", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.View_2", b =>
                {
                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("View_2");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_company_and_contract_type", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.ToView("VW_company_and_contract_type");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_appraisal", b =>
                {
                    b.Property<string>("Actual_No_Drilled_in_Current_Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Category")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("No_of_wells_cored")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Processing_Fees_Paid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_No_Drilled")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_appraisal");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_development", b =>
                {
                    b.Property<string>("Actual_No_Drilled_in_Current_Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Category")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("No_of_wells_cored")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Processing_Fees_Paid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_No_Drilled")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_development");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_exploration", b =>
                {
                    b.Property<string>("Actual_No_Drilled_in_Current_Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Category")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("No_of_wells_cored")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Processing_Fees_Paid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Proposed_No_Drilled")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_exploration");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT", b =>
                {
                    b.Property<string>("Appraisal_Actual")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Appraisal_Proposed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Development_Actual")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Development_Proposed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Exploration_Actual")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Exploration_Proposed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_by_year", b =>
                {
                    b.Property<int?>("Appraisal_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Appraisal_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Development_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Development_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Proposed")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_by_year");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_by_year_companyemail", b =>
                {
                    b.Property<int?>("Appraisal_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Appraisal_Proposed")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Development_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Development_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Proposed")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_by_year_companyemail");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover", b =>
                {
                    b.Property<string>("Appraisal_Actual")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Appraisal_Proposed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_year_Actual_Number")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_year_Actual_Number_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Development_Actual")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Development_Proposed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Exploration_Actual")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Exploration_Proposed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr1")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr2")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Expr4")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr5")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr6")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Expr7")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_name_WORKOVERS_RECOMPLETION_JOBS")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_year_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("oml_name_INITIAL_WELL_COMPLETION_JOBS")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("oml_name_VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover__join_Contracttype", b =>
                {
                    b.Property<string>("Appraisal_Actual")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Appraisal_Proposed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Current_year_Actual_Number")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_year_Actual_Number_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Development_Actual")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Development_Proposed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Exploration_Actual")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Exploration_Proposed")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr1")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr2")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Expr4")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr5")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr6")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Expr7")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Expr8")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_name_WORKOVERS_RECOMPLETION_JOBS")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Proposed_year_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("oml_name_INITIAL_WELL_COMPLETION_JOBS")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("oml_name_VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover _join_Contracttype");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover_by_year", b =>
                {
                    b.Property<int?>("Appraisal_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Appraisal_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Current_year_Actual_Number_data_workover")
                        .HasColumnType("int");

                    b.Property<int?>("Current_year_Actual_Number_well_completion")
                        .HasColumnType("int");

                    b.Property<int?>("Development_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Development_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Expr7_Proposed_workover")
                        .HasColumnType("int");

                    b.Property<int?>("Proposed_year_data_well_completion")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover_by_year");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover_by_year_companyemail", b =>
                {
                    b.Property<int?>("Appraisal_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Appraisal_Proposed")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Current_year_Actual_Number_data_workover")
                        .HasColumnType("int");

                    b.Property<int?>("Current_year_Actual_Number_well_completion")
                        .HasColumnType("int");

                    b.Property<int?>("Development_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Development_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Expr7_Proposed_workover")
                        .HasColumnType("int");

                    b.Property<int?>("Proposed_year_data_well_completion")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover_by_year_companyemail");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover_by_year_contract_type", b =>
                {
                    b.Property<int?>("Appraisal_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Appraisal_Proposed")
                        .HasColumnType("int");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<int?>("Current_year_Actual_Number_INITIAL_WELL_COMPLETION_JOBS")
                        .HasColumnType("int");

                    b.Property<int?>("Current_year_Actual_Number_data_WORKOVERS_RECOMPLETION_JOBS")
                        .HasColumnType("int");

                    b.Property<int?>("Development_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Development_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Exploration_Proposed")
                        .HasColumnType("int");

                    b.Property<int?>("Proposed_WORKOVERS_RECOMPLETION_JOBS")
                        .HasColumnType("int");

                    b.Property<int?>("Proposed_year_data_INITIAL_WELL_COMPLETION_JOBS")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS_PIVOT_Completion_Workover_by_year_contract_type");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_GAS_PRODUCTION_ACTIVITIES_total", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<int?>("Current_Actual_Year")
                        .HasColumnType("int");

                    b.Property<int?>("Flared")
                        .HasColumnType("int");

                    b.Property<int?>("Forecast_")
                        .HasColumnType("int");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_GAS_PRODUCTION_ACTIVITIES_total");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_GAS_PRODUCTION_ACTIVITIES_total_summed", b =>
                {
                    b.Property<int?>("Current_Actual_Year")
                        .HasColumnType("int");

                    b.Property<int?>("Flared")
                        .HasColumnType("int");

                    b.Property<int?>("Forecast_")
                        .HasColumnType("int");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_GAS_PRODUCTION_ACTIVITIES_total_summed");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_GAS_PRODUCTION_ACTIVITy", b =>
                {
                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Current_Actual_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Flared")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Forecast_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Utilized")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_GAS_PRODUCTION_ACTIVITIES");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_GEOPHYSICAL_ACTIVITIES_PROCESSING", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Geo_Completion_Status")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_Quantum_of_Data")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geo_Type_of_Data_being_Processed")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geological_location")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name_")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("companyemail_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.ToView("VW_GEOPHYSICAL_ACTIVITIES_PROCESSING");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_GEOPHYSICAL_ACTIVITIES_PROCESSING_SUM_BY_YEAR", b =>
                {
                    b.Property<int?>("Geo_Quantum_of_Data")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_GEOPHYSICAL_ACTIVITIES_PROCESSING_SUM_BY_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_Geophysical_SEISMIC_DATA_old", b =>
                {
                    b.Property<string>("Actual_year_aquired_data_ACQUISITION")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Actual_year_aquired_data_PROCESSING")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Year_ACQUISITION")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_PROCESSING")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("companyemail_ACQUISITION")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("companyemail_PROCESSING")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("companyname_ACQUISITION")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("companyname_PROCESSING")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("proposed_year_data_ACQUISITION")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("proposed_year_data_PROCESSING")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.ToView("VW_Geophysical_SEISMIC_DATA_old");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_Geophysical_SEISMIC_DATA_total", b =>
                {
                    b.Property<int?>("Actual_year_aquired_data_ACQUISITION")
                        .HasColumnType("int");

                    b.Property<int?>("Actual_year_aquired_data_PROCESSING")
                        .HasColumnType("int");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Year_ACQUISITION")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("proposed_year_data_ACQUISITION")
                        .HasColumnType("int");

                    b.Property<int?>("proposed_year_data_PROCESSING")
                        .HasColumnType("int");

                    b.ToView("VW_Geophysical_SEISMIC_DATA_total");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_Geophysical_SEISMIC_DATA_total_summed", b =>
                {
                    b.Property<int?>("Actual_year_aquired_data_ACQUISITION")
                        .HasColumnType("int");

                    b.Property<int?>("Actual_year_aquired_data_PROCESSING")
                        .HasColumnType("int");

                    b.Property<string>("Year_ACQUISITION")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("proposed_year_data_ACQUISITION")
                        .HasColumnType("int");

                    b.Property<int?>("proposed_year_data_PROCESSING")
                        .HasColumnType("int");

                    b.ToView("VW_Geophysical_SEISMIC_DATA_total_summed");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_Geophysical_SEISMIC_DATum", b =>
                {
                    b.Property<string>("Actual_year_aquired_data_ACQUISITION")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Actual_year_aquired_data_PROCESSING")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Year_ACQUISITION")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_PROCESSING")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("companyemail_ACQUISITION")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("companyemail_PROCESSING")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("companyname_ACQUISITION")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("companyname_PROCESSING")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("proposed_year_data_ACQUISITION")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("proposed_year_data_PROCESSING")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.ToView("VW_Geophysical_SEISMIC_DATA");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_HSE_OIL_SPILL_REPORTING_NEW", b =>
                {
                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Volume_of_spill_bbls")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Volume_recovered_bbls")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_HSE_OIL_SPILL_REPORTING_NEW");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_HSE_OIL_SPILL_REPORTING_NEW_total", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<int?>("Volume_of_spill_bbls")
                        .HasColumnType("int");

                    b.Property<int?>("Volume_recovered_bbls")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_HSE_OIL_SPILL_REPORTING_NEW_total");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_HSE_OIL_SPILL_REPORTING_NEW_total_summed", b =>
                {
                    b.Property<int?>("Volume_of_spill_bbls")
                        .HasColumnType("int");

                    b.Property<int?>("Volume_recovered_bbls")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_HSE_OIL_SPILL_REPORTING_NEW_total_summed");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_total", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<int?>("Cost_Barrel")
                        .HasColumnType("int");

                    b.Property<int?>("Current_year_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Deferment")
                        .HasColumnType("int");

                    b.Property<int?>("Forecast")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_total");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_total_summed", b =>
                {
                    b.Property<int?>("Cost_Barrel")
                        .HasColumnType("int");

                    b.Property<int?>("Current_year_Actual")
                        .HasColumnType("int");

                    b.Property<int?>("Deferment")
                        .HasColumnType("int");

                    b.Property<int?>("Forecast")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_total_summed");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_OIL_CONDENSATE_PRODUCTION_ACTIVITy", b =>
                {
                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Cost_Barrel")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_year_Actual")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Deferment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Forecast")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_OIL_CONDENSATE_PRODUCTION_ACTIVITIES");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_RESERVES_UPDATES_OIL_CONDENSATE_MMBBL", b =>
                {
                    b.Property<string>("COMPANY_EMAIL")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Total_Production_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_RESERVES_UPDATES_OIL_CONDENSATE_MMBBL");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_RESERVES_UPDATES_OIL_CONDENSATE_MMBBL_PERCENTAGE_CALCULATED", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<int?>("Percantage_Production")
                        .HasColumnType("int");

                    b.Property<int?>("Total_Production_")
                        .HasColumnType("int");

                    b.Property<int?>("Total_Production_percentage")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP_percentage")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_RESERVES_UPDATES_OIL_CONDENSATE_MMBBL_PERCENTAGE_CALCULATED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_RESERVES_UPDATES_OIL_CONDENSATE_MMBBL_total_4_percentage_calculation", b =>
                {
                    b.Property<int?>("Total_Production_")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_RESERVES_UPDATES_OIL_CONDENSATE_MMBBL_total_4_percentage_calculation");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_SEISMIC_DATA_QUANTUM", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Geo_type_of_data_acquired")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Geological_location")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name_")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Quantum")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("companyemail_")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.ToView("VW_SEISMIC_DATA_QUANTUM");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.VW_SEISMIC_DATA_QUANTUM_SUM_BY_YEAR", b =>
                {
                    b.Property<int?>("Quantum")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("VW_SEISMIC_DATA_QUANTUM_SUM_BY_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WORK_PROGRAM_FLOW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Descriptions")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Flag1")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Value")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("WORK_PROGRAM_FLOW", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WorkOverJob", b =>
                {
                    b.Property<int>("WorkOver_JobsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOver_JobsId"), 1L, 1);

                    b.Property<string>("Actual_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<long?>("Budget_Allocation")
                        .HasColumnType("bigint");

                    b.Property<string>("Proposed_Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("WorkOver_JobsId");

                    b.ToTable("WorkOverJobs");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WorkOvers_Recompletion_Job", b =>
                {
                    b.Property<int>("WorkOvers_Recompletion_JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOvers_Recompletion_JobId"), 1L, 1);

                    b.Property<string>("Actual_No_Current_Year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Actual_No_Proposed_Year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Budget_Allocation_Proposed_Year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Do_you_have_approval_for_workover_recompletion")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Processing_Fees_Paid")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Remark")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Year_of_WorkProgram")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("WorkOvers_Recompletion_JobId");

                    b.ToTable("WorkOvers_Recompletion_Job", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WorkOvers_Recompletion_Job_Field_Dvelopment_Plan", b =>
                {
                    b.Property<int>("WorkOvers_Recompletion_Job_Field_Dvelopment_PlansId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOvers_Recompletion_Job_Field_Dvelopment_PlansId"), 1L, 1);

                    b.Property<string>("How_many_fields_have_FDP")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("How_many_fields_have_approved_FDP")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("List_all_the_field_with_FDP")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("No_of_wells_drilled_in_Current_Year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Number_of_wells_proposed_in_the_FDP")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Processing_Fees_Paid")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Which_fields_do_you_plan_to_submit_an_FDP")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Year_of_WorkProgram")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("proposed_number_of_wells_for_Proposed_Year_from_Approved_FDP")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("WorkOvers_Recompletion_Job_Field_Dvelopment_PlansId");

                    b.ToTable("WorkOvers_Recompletion_Job_Field_Dvelopment_Plans");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WORKOVERS_RECOMPLETION_JOB1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Budeget_Allocation_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Budeget_Allocation_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompletionWellName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Current_year_Actual_Number_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_year_Budget_Allocation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("DaysForCompletion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Do_you_have_approval_for_the_workover_recompletion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Processing_Fees_paid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Proposed_Workover_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Proposed_year_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("QUATER")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("oil_or_gas_wells")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("WORKOVERS_RECOMPLETION_JOBS", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_Cost_Efficiency_Metric_CAPEX_OPEX", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("naira")
                        .HasColumnType("decimal(38,2)");

                    b.ToView("WP_Cost_Efficiency_Metric_CAPEX_OPEX");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_Cost_Efficiency_Metric_CAPEX_OPEX_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("naira")
                        .HasColumnType("int");

                    b.ToView("WP_Cost_Efficiency_Metric_CAPEX_OPEX_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_Cost_Efficiency_Metric_CAPEX_OPEX_PRODUCTION", b =>
                {
                    b.Property<decimal?>("CAPEX_PLUS_OPEX")
                        .HasColumnType("decimal(38,2)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(38,2)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_Cost_Efficiency_Metric_CAPEX_OPEX_PRODUCTION");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_Cost_Efficiency_Metric_NET_PRODUCTION", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(38,2)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_Cost_Efficiency_Metric_NET_PRODUCTION");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_Cost_Efficiency_Metric_NET_PRODUCTION_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Production")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_Cost_Efficiency_Metric_NET_PRODUCTION_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_COUNT_ADMIN_DATETIME_PRESENTATION_BY_TOTAL_COUNT_YEARLY", b =>
                {
                    b.Property<int?>("TOTAL_COUNT_YEARLY")
                        .HasColumnType("int");

                    b.Property<string>("YEAR")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_COUNT_ADMIN_DATETIME_PRESENTATION_BY_TOTAL_COUNT_YEARLY");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_COUNT_ADMIN_DATETIME_PRESENTATION_BY_YEAR_PRESENTED_CATEGORY", b =>
                {
                    b.Property<string>("PRESENTED")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("count")
                        .HasColumnType("int");

                    b.ToView("WP_COUNT_ADMIN_DATETIME_PRESENTATION_BY_YEAR_PRESENTED_CATEGORY");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_COUNT_ADMIN_DATETIME_PRESENTATION_BY_YEAR_PRESENTED_COMPANYNAME", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PRESENTED")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("count")
                        .HasColumnType("int");

                    b.ToView("WP_COUNT_ADMIN_DATETIME_PRESENTATION_BY_YEAR_PRESENTED_COMPANYNAME");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_COUNT_DRILLING_OPERATIONS_CATEGORIES_OF_WELL", b =>
                {
                    b.Property<int?>("COUNT")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_COUNT_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_COUNT_PRESENTATION_CATERGORY_BY_YEAR", b =>
                {
                    b.Property<string>("Status_")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("count")
                        .HasColumnType("int");

                    b.ToView("WP_COUNT_PRESENTATION_CATERGORY_BY_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_COUNT_PRESENTATION_CATERGORY_BY_YEAR_old", b =>
                {
                    b.Property<string>("Status_")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("count")
                        .HasColumnType("int");

                    b.ToView("WP_COUNT_PRESENTATION_CATERGORY_BY_YEAR_old");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_COUNT_PRESENTATION_CATERGORY_BY_YEAR_STATUS_COMPANYNAME", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Status_")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("count")
                        .HasColumnType("int");

                    b.ToView("WP_COUNT_PRESENTATION_CATERGORY_BY_YEAR_STATUS_COMPANYNAME");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_DRILLING_OPERATIONS_CATEGORIES_OF_WELL", b =>
                {
                    b.Property<decimal?>("Actual_No_Drilled_in_Current_Year")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Category")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal?>("Proposed_No_Drilled")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_DRILLING_OPERATIONS_CATEGORIES_OF_WELLS");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_Contract_Type", b =>
                {
                    b.Property<decimal?>("Actual_Total_Gas_Produced")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Flared_Gas_Produced")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Utilized_Gas_Produced")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_Contract_Type");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_contract_type_basis", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Percentage_Production")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Total_GAS_Production_by_company")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Total_GAS_Production_by_year")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_contract_type_basis");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_contract_type_basis_PLANNED", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Percentage_Production")
                        .HasColumnType("decimal(33,13)");

                    b.Property<int?>("Total_GAS_Production_by_company")
                        .HasColumnType("int");

                    b.Property<int?>("Total_GAS_Production_by_year")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_contract_type_basis_PLANNED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_contract_type_pivoted", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("_2010")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2010");

                    b.Property<decimal?>("_2011")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2011");

                    b.Property<decimal?>("_2012")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2012");

                    b.Property<decimal?>("_2013")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2013");

                    b.Property<decimal?>("_2014")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2014");

                    b.Property<decimal?>("_2015")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2015");

                    b.Property<decimal?>("_2016")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2016");

                    b.Property<decimal?>("_2017")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2017");

                    b.Property<decimal?>("_2018")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2018");

                    b.Property<decimal?>("_2019")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2019");

                    b.Property<decimal?>("_2020")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2020");

                    b.Property<decimal?>("_2021")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2021");

                    b.Property<decimal?>("_2022")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2022");

                    b.Property<decimal?>("_2023")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2023");

                    b.Property<decimal?>("_2024")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2024");

                    b.Property<decimal?>("_2025")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2025");

                    b.Property<decimal?>("_2026")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2026");

                    b.Property<decimal?>("_2027")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2027");

                    b.Property<decimal?>("_2028")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2028");

                    b.Property<decimal?>("_2029")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2029");

                    b.Property<decimal?>("_2030")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2030");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_contract_type_pivoted");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_contract_type_tobe_pivoted", b =>
                {
                    b.Property<decimal?>("Annual_Total_Production_by_CONTRACT_TYPE")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_contract_type_tobe_pivoted");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_penalty_payment", b =>
                {
                    b.Property<decimal?>("Amount_Paid")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("Flared")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("penaltyfeepaid")
                        .HasColumnType("decimal(38,0)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_penalty_payment");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_Percentage", b =>
                {
                    b.Property<decimal?>("Actual_Total_Gas_Produced")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Flared_Gas_Produced")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Percentage_Utilized")
                        .HasColumnType("decimal(38,16)");

                    b.Property<decimal?>("Utilized_Gas_Produced")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_Percentages");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_produced_utilized_flared", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("Current_Actual_Year")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Flared")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Percentage_FLARED")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Utilized")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_produced_utilized_flared");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_produced_utilized_flared_PERCENTAGE", b =>
                {
                    b.Property<int?>("Current_Actual_Year")
                        .HasColumnType("int");

                    b.Property<int?>("Flared")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(33,13)");

                    b.Property<string>("TYPE_")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_produced_utilized_flared_PERCENTAGE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_produced_utilized_flared_PERCENTAGE_PLANNED", b =>
                {
                    b.Property<int?>("Current_Actual_Year")
                        .HasColumnType("int");

                    b.Property<int?>("Flared")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(33,13)");

                    b.Property<string>("TYPE_")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_produced_utilized_flared_PERCENTAGE_PLANNED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_produced_utilized_flared_PLANNED", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Current_Actual_Year")
                        .HasColumnType("int");

                    b.Property<int?>("Flared")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentage_FLARED")
                        .HasColumnType("decimal(33,13)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_produced_utilized_flared_PLANNED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_terrain_pivotted", b =>
                {
                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("_2010")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2010");

                    b.Property<decimal?>("_2011")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2011");

                    b.Property<decimal?>("_2012")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2012");

                    b.Property<decimal?>("_2013")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2013");

                    b.Property<decimal?>("_2014")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2014");

                    b.Property<decimal?>("_2015")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2015");

                    b.Property<decimal?>("_2016")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2016");

                    b.Property<decimal?>("_2017")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2017");

                    b.Property<decimal?>("_2018")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2018");

                    b.Property<decimal?>("_2019")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2019");

                    b.Property<decimal?>("_2020")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2020");

                    b.Property<decimal?>("_2021")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2021");

                    b.Property<decimal?>("_2022")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2022");

                    b.Property<decimal?>("_2023")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2023");

                    b.Property<decimal?>("_2024")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2024");

                    b.Property<decimal?>("_2025")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2025");

                    b.Property<decimal?>("_2026")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2026");

                    b.Property<decimal?>("_2027")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2027");

                    b.Property<decimal?>("_2028")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2028");

                    b.Property<decimal?>("_2029")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2029");

                    b.Property<decimal?>("_2030")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2030");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_terrain_pivotted");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITIES_terrain_tobe_pivotted", b =>
                {
                    b.Property<decimal?>("Annual_Total_Production_by_Terrain")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES_terrain_tobe_pivotted");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GAS_PRODUCTION_ACTIVITy", b =>
                {
                    b.Property<decimal?>("Actual_Total_Gas_Produced")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Flared_Gas_Produced")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Utilized_Gas_Produced")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GAS_PRODUCTION_ACTIVITIES");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_Gas_Production_Utilisation_And_Flaring_Forecast", b =>
                {
                    b.Property<int?>("Current_Actual_Year")
                        .HasColumnType("int");

                    b.Property<int?>("Flared")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percentage_Utilized")
                        .HasColumnType("decimal(33,13)");

                    b.Property<decimal?>("Percentage_flared")
                        .HasColumnType("decimal(33,13)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_Gas_Production_Utilisation_And_Flaring_Forecast");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GEOPHYSICAL_ACTIVITIES_ACQUISITION", b =>
                {
                    b.Property<decimal?>("Actual_year_aquired_data")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Geo_type_of_data_acquired")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("proposed_year_data")
                        .HasColumnType("decimal(38,0)");

                    b.ToView("WP_GEOPHYSICAL_ACTIVITIES_ACQUISITION");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GEOPHYSICAL_ACTIVITIES_ACQUISITION_count_contract_type", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Count_Contract_Type")
                        .HasColumnType("int");

                    b.Property<string>("Geo_type_of_data_acquired")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GEOPHYSICAL_ACTIVITIES_ACQUISITION_count_contract_type");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GEOPHYSICAL_ACTIVITIES_ACQUISITION_sum_and_count", b =>
                {
                    b.Property<decimal?>("Actual_year_aquired_data")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Count_Contract_Type")
                        .HasColumnType("int");

                    b.Property<string>("Geo_type_of_data_acquired")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("proposed_year_data")
                        .HasColumnType("decimal(38,0)");

                    b.ToView("WP_GEOPHYSICAL_ACTIVITIES_ACQUISITION_sum_and_count");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GEOPHYSICAL_ACTIVITIES_ACQUISITION_sum_contract_type", b =>
                {
                    b.Property<decimal?>("Actual_year_aquired_data")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Geo_type_of_data_acquired")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("proposed_year_data")
                        .HasColumnType("decimal(38,0)");

                    b.ToView("WP_GEOPHYSICAL_ACTIVITIES_ACQUISITION_sum_contract_type");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_GEOPHYSICAL_ACTIVITIES_PROCESSING", b =>
                {
                    b.Property<string>("Geo_Type_of_Data_being_Processed")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<decimal?>("Interpreted_Actual")
                        .HasColumnType("decimal(38,2)");

                    b.Property<decimal?>("Interpreted_Proposed")
                        .HasColumnType("decimal(38,2)");

                    b.Property<decimal?>("Processed_Actual")
                        .HasColumnType("decimal(38,2)");

                    b.Property<decimal?>("Processed_Proposed")
                        .HasColumnType("decimal(38,2)");

                    b.Property<decimal?>("Reprocessed_Actual")
                        .HasColumnType("decimal(38,2)");

                    b.Property<decimal?>("Reprocessed_Proposed")
                        .HasColumnType("decimal(38,2)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_GEOPHYSICAL_ACTIVITIES_PROCESSING");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_by_consequence", b =>
                {
                    b.Property<string>("Consequence")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("sum_accident")
                        .HasColumnType("int");

                    b.ToView("WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_by_consequences");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_consequence_is_spill", b =>
                {
                    b.Property<string>("Cause")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Consequence")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("sum_accident")
                        .HasColumnType("int");

                    b.ToView("WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_consequence_is_spill");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_consequence_is_spill_total", b =>
                {
                    b.Property<string>("Consequence")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("sum_accident")
                        .HasColumnType("int");

                    b.ToView("WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_consequence_is_spill_total");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_total_accident", b =>
                {
                    b.Property<int?>("Sum_accident")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_total_accident");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_total_spill_accident_and_percentage", b =>
                {
                    b.Property<string>("Cause")
                        .HasMaxLength(3999)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3999)");

                    b.Property<string>("Consequence")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<string>("Expr1")
                        .HasMaxLength(3900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3900)");

                    b.Property<decimal?>("Percentage_Spill")
                        .HasColumnType("decimal(38,16)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP_from_total")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("sum_accident")
                        .HasColumnType("int");

                    b.Property<int?>("sum_accident_from_total")
                        .HasColumnType("int")
                        .HasColumnName("sum_accident_from total");

                    b.ToView("WP_HSE_ACCIDENT_INCIDENCE_REPORTING_TYPE_OF_ACCIDENT_NEW_total_spill_accident_and_percentages");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_HSE_FATALITIES_accident_statistic_table", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Fatalities_Current_year")
                        .HasColumnType("int");

                    b.Property<int?>("Fatalities_Proposed_year")
                        .HasColumnType("int");

                    b.Property<string>("Fatalities_Type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("type_of_incidence")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("WP_HSE_FATALITIES_accident_statistic_table");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_INITIAL_WELL_COMPLETION_JOB", b =>
                {
                    b.Property<decimal?>("Current_year_Actual_Number")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Proposed_year_data")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_INITIAL_WELL_COMPLETION_JOBS");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_Contract_Type", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Total_Reconciled_National_Crude_Oil_Production")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_Contract_Type");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_by_ContractType_Pivotted", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("_2010")
                        .HasColumnType("int")
                        .HasColumnName("2010");

                    b.Property<int?>("_2011")
                        .HasColumnType("int")
                        .HasColumnName("2011");

                    b.Property<int?>("_2012")
                        .HasColumnType("int")
                        .HasColumnName("2012");

                    b.Property<int?>("_2013")
                        .HasColumnType("int")
                        .HasColumnName("2013");

                    b.Property<int?>("_2014")
                        .HasColumnType("int")
                        .HasColumnName("2014");

                    b.Property<int?>("_2015")
                        .HasColumnType("int")
                        .HasColumnName("2015");

                    b.Property<int?>("_2016")
                        .HasColumnType("int")
                        .HasColumnName("2016");

                    b.Property<int?>("_2017")
                        .HasColumnType("int")
                        .HasColumnName("2017");

                    b.Property<int?>("_2018")
                        .HasColumnType("int")
                        .HasColumnName("2018");

                    b.Property<int?>("_2019")
                        .HasColumnType("int")
                        .HasColumnName("2019");

                    b.Property<int?>("_2020")
                        .HasColumnType("int")
                        .HasColumnName("2020");

                    b.Property<int?>("_2021")
                        .HasColumnType("int")
                        .HasColumnName("2021");

                    b.Property<int?>("_2022")
                        .HasColumnType("int")
                        .HasColumnName("2022");

                    b.Property<int?>("_2023")
                        .HasColumnType("int")
                        .HasColumnName("2023");

                    b.Property<int?>("_2024")
                        .HasColumnType("int")
                        .HasColumnName("2024");

                    b.Property<int?>("_2025")
                        .HasColumnType("int")
                        .HasColumnName("2025");

                    b.Property<int?>("_2026")
                        .HasColumnType("int")
                        .HasColumnName("2026");

                    b.Property<int?>("_2027")
                        .HasColumnType("int")
                        .HasColumnName("2027");

                    b.Property<int?>("_2028")
                        .HasColumnType("int")
                        .HasColumnName("2028");

                    b.Property<int?>("_2029")
                        .HasColumnType("int")
                        .HasColumnName("2029");

                    b.Property<int?>("_2030")
                        .HasColumnType("int")
                        .HasColumnName("2030");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_by_ContractType_Pivotted");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_by_ContractType_tobe_pivoted", b =>
                {
                    b.Property<int?>("Annual_Total_Production_by_CONTRACT_TYPE")
                        .HasColumnType("int");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_by_ContractType_tobe_pivoted");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_By_month_year", b =>
                {
                    b.Property<decimal?>("Annual_Avg_Daily_Production")
                        .HasColumnType("decimal(38,6)");

                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<string>("Production_month")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Production_month_id")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_By_month_year");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_By_month_year_PROPOSED", b =>
                {
                    b.Property<decimal?>("Annual_Avg_Daily_Production")
                        .HasColumnType("decimal(38,6)");

                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<string>("Production_month")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Production_month_id")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_By_month_year_PROPOSED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_by_Terrain_Pivoted", b =>
                {
                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("_2010")
                        .HasColumnType("int")
                        .HasColumnName("2010");

                    b.Property<int?>("_2011")
                        .HasColumnType("int")
                        .HasColumnName("2011");

                    b.Property<int?>("_2012")
                        .HasColumnType("int")
                        .HasColumnName("2012");

                    b.Property<int?>("_2013")
                        .HasColumnType("int")
                        .HasColumnName("2013");

                    b.Property<int?>("_2014")
                        .HasColumnType("int")
                        .HasColumnName("2014");

                    b.Property<int?>("_2015")
                        .HasColumnType("int")
                        .HasColumnName("2015");

                    b.Property<int?>("_2016")
                        .HasColumnType("int")
                        .HasColumnName("2016");

                    b.Property<int?>("_2017")
                        .HasColumnType("int")
                        .HasColumnName("2017");

                    b.Property<int?>("_2018")
                        .HasColumnType("int")
                        .HasColumnName("2018");

                    b.Property<int?>("_2019")
                        .HasColumnType("int")
                        .HasColumnName("2019");

                    b.Property<int?>("_2020")
                        .HasColumnType("int")
                        .HasColumnName("2020");

                    b.Property<int?>("_2021")
                        .HasColumnType("int")
                        .HasColumnName("2021");

                    b.Property<int?>("_2022")
                        .HasColumnType("int")
                        .HasColumnName("2022");

                    b.Property<int?>("_2023")
                        .HasColumnType("int")
                        .HasColumnName("2023");

                    b.Property<int?>("_2024")
                        .HasColumnType("int")
                        .HasColumnName("2024");

                    b.Property<int?>("_2025")
                        .HasColumnType("int")
                        .HasColumnName("2025");

                    b.Property<int?>("_2026")
                        .HasColumnType("int")
                        .HasColumnName("2026");

                    b.Property<int?>("_2027")
                        .HasColumnType("int")
                        .HasColumnName("2027");

                    b.Property<int?>("_2028")
                        .HasColumnType("int")
                        .HasColumnName("2028");

                    b.Property<int?>("_2029")
                        .HasColumnType("int")
                        .HasColumnName("2029");

                    b.Property<int?>("_2030")
                        .HasColumnType("int")
                        .HasColumnName("2030");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_by_Terrain_Pivoted");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_by_Terrain_Pivoted_PLANNED", b =>
                {
                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("_2010")
                        .HasColumnType("int")
                        .HasColumnName("2010");

                    b.Property<int?>("_2011")
                        .HasColumnType("int")
                        .HasColumnName("2011");

                    b.Property<int?>("_2012")
                        .HasColumnType("int")
                        .HasColumnName("2012");

                    b.Property<int?>("_2013")
                        .HasColumnType("int")
                        .HasColumnName("2013");

                    b.Property<int?>("_2014")
                        .HasColumnType("int")
                        .HasColumnName("2014");

                    b.Property<int?>("_2015")
                        .HasColumnType("int")
                        .HasColumnName("2015");

                    b.Property<int?>("_2016")
                        .HasColumnType("int")
                        .HasColumnName("2016");

                    b.Property<int?>("_2017")
                        .HasColumnType("int")
                        .HasColumnName("2017");

                    b.Property<int?>("_2018")
                        .HasColumnType("int")
                        .HasColumnName("2018");

                    b.Property<int?>("_2019")
                        .HasColumnType("int")
                        .HasColumnName("2019");

                    b.Property<int?>("_2020")
                        .HasColumnType("int")
                        .HasColumnName("2020");

                    b.Property<int?>("_2021")
                        .HasColumnType("int")
                        .HasColumnName("2021");

                    b.Property<int?>("_2022")
                        .HasColumnType("int")
                        .HasColumnName("2022");

                    b.Property<int?>("_2023")
                        .HasColumnType("int")
                        .HasColumnName("2023");

                    b.Property<int?>("_2024")
                        .HasColumnType("int")
                        .HasColumnName("2024");

                    b.Property<int?>("_2025")
                        .HasColumnType("int")
                        .HasColumnName("2025");

                    b.Property<int?>("_2026")
                        .HasColumnType("int")
                        .HasColumnName("2026");

                    b.Property<int?>("_2027")
                        .HasColumnType("int")
                        .HasColumnName("2027");

                    b.Property<int?>("_2028")
                        .HasColumnType("int")
                        .HasColumnName("2028");

                    b.Property<int?>("_2029")
                        .HasColumnType("int")
                        .HasColumnName("2029");

                    b.Property<int?>("_2030")
                        .HasColumnType("int")
                        .HasColumnName("2030");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_by_Terrain_Pivoted_PLANNED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_Five_Year_Trend_for_Companies_Reserve_Replacement_Ratio", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("_2010")
                        .HasColumnType("int")
                        .HasColumnName("2010");

                    b.Property<int?>("_2011")
                        .HasColumnType("int")
                        .HasColumnName("2011");

                    b.Property<int?>("_2012")
                        .HasColumnType("int")
                        .HasColumnName("2012");

                    b.Property<int?>("_2013")
                        .HasColumnType("int")
                        .HasColumnName("2013");

                    b.Property<int?>("_2014")
                        .HasColumnType("int")
                        .HasColumnName("2014");

                    b.Property<int?>("_2015")
                        .HasColumnType("int")
                        .HasColumnName("2015");

                    b.Property<int?>("_2016")
                        .HasColumnType("int")
                        .HasColumnName("2016");

                    b.Property<int?>("_2017")
                        .HasColumnType("int")
                        .HasColumnName("2017");

                    b.Property<int?>("_2018")
                        .HasColumnType("int")
                        .HasColumnName("2018");

                    b.Property<int?>("_2019")
                        .HasColumnType("int")
                        .HasColumnName("2019");

                    b.Property<int?>("_2020")
                        .HasColumnType("int")
                        .HasColumnName("2020");

                    b.Property<int?>("_2021")
                        .HasColumnType("int")
                        .HasColumnName("2021");

                    b.Property<int?>("_2022")
                        .HasColumnType("int")
                        .HasColumnName("2022");

                    b.Property<int?>("_2023")
                        .HasColumnType("int")
                        .HasColumnName("2023");

                    b.Property<int?>("_2024")
                        .HasColumnType("int")
                        .HasColumnName("2024");

                    b.Property<int?>("_2025")
                        .HasColumnType("int")
                        .HasColumnName("2025");

                    b.Property<int?>("_2026")
                        .HasColumnType("int")
                        .HasColumnName("2026");

                    b.Property<int?>("_2027")
                        .HasColumnType("int")
                        .HasColumnName("2027");

                    b.Property<int?>("_2028")
                        .HasColumnType("int")
                        .HasColumnName("2028");

                    b.Property<int?>("_2029")
                        .HasColumnType("int")
                        .HasColumnName("2029");

                    b.Property<int?>("_2030")
                        .HasColumnType("int")
                        .HasColumnName("2030");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_Five_Year_Trend_for_Companies_Reserve_Replacement_Ratio");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION", b =>
                {
                    b.Property<decimal?>("Annual_Avg_Daily_Production")
                        .HasColumnType("decimal(38,6)");

                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<int?>("Annual_Total_Production_by_year")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Percentage_Production")
                        .HasColumnType("decimal(33,13)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_by_Terrain", b =>
                {
                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<int?>("Annual_Total_Production_by_year")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percentage_Production")
                        .HasColumnType("decimal(33,13)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_by_Terrain");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_by_Terrain_PLANNED", b =>
                {
                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<int?>("Annual_Total_Production_by_year")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percentage_Production")
                        .HasColumnType("decimal(33,13)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_by_Terrain_PLANNED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_CONTRACT_TYPE", b =>
                {
                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<int?>("Annual_Total_Production_by_year")
                        .HasColumnType("int");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Percentage_Production")
                        .HasColumnType("decimal(33,13)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_CONTRACT_TYPE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_CONTRACT_TYPE_chart", b =>
                {
                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Percentage_Production")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_CONTRACT_TYPE_chart");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_CONTRACT_TYPE_PROPOSED", b =>
                {
                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<int?>("Annual_Total_Production_by_year")
                        .HasColumnType("int");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Percentage_Production")
                        .HasColumnType("decimal(33,13)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_CONTRACT_TYPE_PROPOSED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_PROPOSED", b =>
                {
                    b.Property<decimal?>("Annual_Avg_Daily_Production")
                        .HasColumnType("decimal(38,6)");

                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<int?>("Annual_Total_Production_by_year")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Percentage_Production")
                        .HasColumnType("decimal(33,13)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_OIL_PRODUCTION_PROPOSED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_Pivotted_by_company_productionmonth_year_breakdown", b =>
                {
                    b.Property<int?>("April")
                        .HasColumnType("int");

                    b.Property<int?>("August")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("December")
                        .HasColumnType("int");

                    b.Property<int?>("February")
                        .HasColumnType("int");

                    b.Property<int?>("January")
                        .HasColumnType("int");

                    b.Property<int?>("July")
                        .HasColumnType("int");

                    b.Property<int?>("June")
                        .HasColumnType("int");

                    b.Property<int?>("March")
                        .HasColumnType("int");

                    b.Property<int?>("May")
                        .HasColumnType("int");

                    b.Property<int?>("November")
                        .HasColumnType("int");

                    b.Property<int?>("October")
                        .HasColumnType("int");

                    b.Property<int?>("September")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_Pivotted_by_company_productionmonth_year_breakdown");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_Pivotted_by_company_productionmonth_year_breakdown_PLANNED", b =>
                {
                    b.Property<int?>("April")
                        .HasColumnType("int");

                    b.Property<int?>("August")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("December")
                        .HasColumnType("int");

                    b.Property<int?>("February")
                        .HasColumnType("int");

                    b.Property<int?>("January")
                        .HasColumnType("int");

                    b.Property<int?>("July")
                        .HasColumnType("int");

                    b.Property<int?>("June")
                        .HasColumnType("int");

                    b.Property<int?>("March")
                        .HasColumnType("int");

                    b.Property<int?>("May")
                        .HasColumnType("int");

                    b.Property<int?>("November")
                        .HasColumnType("int");

                    b.Property<int?>("October")
                        .HasColumnType("int");

                    b.Property<int?>("September")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_Pivotted_by_company_productionmonth_year_breakdown_PLANNED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_tobe_Pivoted", b =>
                {
                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_tobe_Pivoted");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_tobe_Pivoted_PLANNED", b =>
                {
                    b.Property<int?>("Annual_Total_Production_by_company")
                        .HasColumnType("int");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_tobe_Pivoted_PLANNED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_TOBE_Pivotted_by_company_productionmonth_year", b =>
                {
                    b.Property<int?>("Annual_Total_Production_by_company_name")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Production_month")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_TOBE_Pivotted_by_company_productionmonth_year");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_TOBE_Pivotted_by_company_productionmonth_year_PLANNED", b =>
                {
                    b.Property<int?>("Annual_Total_Production_by_company_name")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Production_month")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_monthly_Activities_TOBE_Pivotted_by_company_productionmonth_year_PLANNED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_Total_reconciled_crude_oil", b =>
                {
                    b.Property<decimal?>("Total_Reconciled_National_Crude_Oil_Production")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OIL_CONDENSATE_PRODUCTION_ACTIVITIES_Total_reconciled_crude_oil");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_ACQUISITION_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_ACQUISITION_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_ACQUISITION_INDEX_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_ACQUISITION_INDEX_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_ACQUSITION_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Quantum_Acquired")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Quantum_Approved")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_ACQUSITION_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_ACQUSITION_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Quantum_Acquired")
                        .HasColumnType("int");

                    b.Property<int?>("Quantum_Approved")
                        .HasColumnType("int");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,19)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_ACQUSITION_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_ACQUSITION_INDEX_WEIGHTED_SCORE_OLD2021", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Quantum_Acquired")
                        .HasColumnType("int");

                    b.Property<int?>("Quantum_Approved")
                        .HasColumnType("int");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,19)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_ACQUSITION_INDEX_WEIGHTED_SCORE_OLD2021");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_COMPLIANCE_INDEX_CALCULATION", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<decimal?>("Total_Sum_All_Division")
                        .HasColumnType("decimal(38,7)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.ToView("WP_OML_COMPLIANCE_INDEX_CALCULATIONS");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_COMPLIANCE_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,6)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(38,7)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,7)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.ToView("WP_OML_COMPLIANCE_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Concession_Rentals_Index_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Concession_Rentals_Index_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_CONCESSION_RENTALS_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_CONCESSION_RENTALS_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Discovery_Index_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Discovery_Index_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Discovery_Index_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Discovery_Index_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_DISCOVERY_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_DISCOVERY_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_DISCOVERY_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_DISCOVERY_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Domestic_Gas_obligation_Index_MN_MAX_RGT_by_Year_of_WP", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Domestic_Gas_obligation_Index_MN_MAX_RGT_by_Year_of_WP");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Domestic_Gas_obligation_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Domestic_Gas_obligation_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Exploratory_Drilling_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Exploratory_Drilling_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_EXPLORATORY_DRILLING_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(26)
                        .IsUnicode(false)
                        .HasColumnType("varchar(26)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_EXPLORATORY_DRILLING_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Facility_Project_Performance_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Facility_Project_Performance_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Facility_Project_Performance_INDEX_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Facility_Project_Performance_INDEX_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Facility_Project_Performance_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Produced")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Utilized")
                        .HasColumnType("numeric(38,2)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Facility_Project_Performance_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Facility_Project_Performance_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Produced")
                        .HasColumnType("int");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,19)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Facility_Project_Performance_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_FATALITY_Index_MN_MAX_RGT_by_Year_of_WP", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_FATALITY_Index_MN_MAX_RGT_by_Year_of_WP");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_FATALITY_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_FATALITY_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Gas_flare_Royalty_payment_Index_MN_MAX_RGT_by_Year_of_WP", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Gas_flare_Royalty_payment_Index_MN_MAX_RGT_by_Year_of_WP");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Gas_flare_Royalty_payment_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(23)
                        .IsUnicode(false)
                        .HasColumnType("varchar(23)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Gas_flare_Royalty_payment_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Gas_Sales_Royalty_Payment_Index_MN_MAX_RGT_by_Year_of_WP", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Gas_Sales_Royalty_Payment_Index_MN_MAX_RGT_by_Year_of_WP");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Gas_Sales_Royalty_Payment_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("varchar(31)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Gas_Sales_Royalty_Payment_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_GAS_Utilisation_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_GAS_Utilisation_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_GAS_Utilisation_INDEX_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_GAS_Utilisation_INDEX_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_GAS_Utilisation_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Produced")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Utilized")
                        .HasColumnType("numeric(38,2)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_GAS_Utilisation_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_GAS_Utilisation_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Produced")
                        .HasColumnType("int");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,19)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_GAS_Utilisation_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Has_annual_NDR_subscription_fee_been_paid_new_Index_MN_MAX_RGT_by_Year_of_WP", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Has_annual_NDR_subscription_fee_been_paid_new_Index_MN_MAX_RGT_by_Year_of_WP");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Has_annual_NDR_subscription_fee_been_paid_new_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Has_annual_NDR_subscription_fee_been_paid_new_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_HSE_ACCIDENT_INCIDENCE_REPORTING_Index_MN_MAX_RGT_by_Year_of_WP", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_HSE_ACCIDENT_INCIDENCE_REPORTING_Index_MN_MAX_RGT_by_Year_of_WP");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_HSE_ACCIDENT_INCIDENCE_REPORTING_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_HSE_ACCIDENT_INCIDENCE_REPORTING_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_INCREMENT_IN_PRODUCTION_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,16)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,16)");

                    b.Property<int?>("Year_of_WP")
                        .HasColumnType("int");

                    b.ToView("WP_OML_INCREMENT_IN_PRODUCTION_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_INCREMENT_IN_PRODUCTION_STAGE_1", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Production_SUM_CURRENT_YEAR")
                        .HasColumnType("int");

                    b.Property<int?>("Production_SUM_PREVIOUS_YEAR")
                        .HasColumnType("int");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(36,19)");

                    b.Property<int?>("Year_of_WP")
                        .HasColumnType("int");

                    b.Property<int?>("Year_of_WP_PREVIOUS")
                        .HasColumnType("int");

                    b.ToView("WP_OML_INCREMENT_IN_PRODUCTION_STAGE_1");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_INJURY_Index_MN_MAX_RGT_by_Year_of_WP", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_INJURY_Index_MN_MAX_RGT_by_Year_of_WP");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_INJURY_Index_MN_MAX_RGT_by_Year_of_WP_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_INJURY_Index_MN_MAX_RGT_by_Year_of_WP_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_INJURY_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_INJURY_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_INJURY_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_INJURY_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_NDPR_SUBSCRIPTION_FEE_Index_MN_MAX_RGT_by_Year_of_WP", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_NDPR_SUBSCRIPTION_FEE_Index_MN_MAX_RGT_by_Year_of_WP");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_NDPR_SUBSCRIPTION_FEE_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_NDPR_SUBSCRIPTION_FEE_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Oil_spill_reported_Index_MN_MAX_RGT_by_Year_of_WP", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Oil_spill_reported_Index_MN_MAX_RGT_by_Year_of_WP");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Oil_spill_reported_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Oil_spill_reported_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Reserve_Replacement_Ratio_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,9)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,9)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.ToView("WP_OML_Reserve_Replacement_Ratio_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Reserve_Replacement_Ratio_INDEX_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,9)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,9)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.ToView("WP_OML_Reserve_Replacement_Ratio_INDEX_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_RESERVE_REPLACEMENT_RATIO_STAGE_1", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("Reserves_as_at_MMbbl")
                        .HasColumnType("int");

                    b.Property<decimal?>("Reserves_as_at_MMbbl_P1")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Total_Production_")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("numeric(38,14)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.ToView("WP_OML_RESERVE_REPLACEMENT_RATIO_STAGE_1");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_RESERVE_REPLACEMENT_RATIO_STAGE_1_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("Reserves_as_at_MMbbl")
                        .HasColumnType("int");

                    b.Property<int?>("Reserves_as_at_MMbbl_P1")
                        .HasColumnType("int");

                    b.Property<int?>("Total_Production_")
                        .HasColumnType("int");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.ToView("WP_OML_RESERVE_REPLACEMENT_RATIO_STAGE_1_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_RESERVE_REPLACEMENT_RATIO_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,9)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,9)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("numeric(38,9)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("numeric(38,14)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("numeric(38,14)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.ToView("WP_OML_RESERVE_REPLACEMENT_RATIO_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Senior_Staff_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Senior_Staff_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Senior_Staff_INDEX_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Senior_Staff_INDEX_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Senior_Staff_INDEX_MN_MAX_RGT_by_YEAR_OLD2021", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Senior_Staff_INDEX_MN_MAX_RGT_by_YEAR_OLD2021");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Senior_Staff_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Produced")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Utilized")
                        .HasColumnType("numeric(38,2)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Senior_Staff_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Senior_Staff_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Produced")
                        .HasColumnType("int");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,19)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Senior_Staff_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Senior_Staff_INDEX_WEIGHTED_SCORE_OLD2021", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Produced")
                        .HasColumnType("int");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,19)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Senior_Staff_INDEX_WEIGHTED_SCORE_OLD2021");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_SIGNATURE_BONUS_Index_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_SIGNATURE_BONUS_Index_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_SIGNATURE_BONUS_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_SIGNATURE_BONUS_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Top_Management_Staff_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Top_Management_Staff_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Top_Management_Staff_INDEX_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Top_Management_Staff_INDEX_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Top_Management_Staff_INDEX_MN_MAX_RGT_by_YEAR_OLD2021", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Top_Management_Staff_INDEX_MN_MAX_RGT_by_YEAR_OLD2021");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Top_Management_Staff_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Produced")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Utilized")
                        .HasColumnType("numeric(38,2)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Top_Management_Staff_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Top_Management_Staff_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Produced")
                        .HasColumnType("int");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,19)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Top_Management_Staff_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OML_Top_Management_Staff_INDEX_WEIGHTED_SCORE_OLD2021", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Produced")
                        .HasColumnType("int");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,19)");

                    b.Property<int?>("Utilized")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OML_Top_Management_Staff_INDEX_WEIGHTED_SCORE_OLD2021");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_ACQUISITION_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_ACQUISITION_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_ACQUISITION_INDEX_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_ACQUISITION_INDEX_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_ACQUSITION_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Quantum_Acquired")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Quantum_Approved")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_ACQUSITION_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_ACQUSITION_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Quantum_Acquired")
                        .HasColumnType("int");

                    b.Property<int?>("Quantum_Approved")
                        .HasColumnType("int");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,19)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_ACQUSITION_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_Aggregated_Score_ALL_COMPANIES_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("OPL_Aggregated_Score")
                        .HasColumnType("decimal(32,19)");

                    b.Property<int?>("Recalibrated_Scaled_Index_SUM")
                        .HasColumnType("int");

                    b.Property<int?>("Weight_SUM")
                        .HasColumnType("int");

                    b.Property<int?>("Weighted_Score_SUM")
                        .HasColumnType("int");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_Aggregated_Score_ALL_COMPANIES_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_Aggregated_Score_ALL_COMPANIES_WITHOUT_INDEX_TYPE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("OPL_Aggregated_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index_SUM")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Weight_SUM")
                        .HasColumnType("numeric(38,2)");

                    b.Property<decimal?>("Weighted_Score_SUM")
                        .HasColumnType("numeric(38,2)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_Aggregated_Score_ALL_COMPANIES_WITHOUT_INDEX_TYPE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_Aggregated_Score_ALL_COMPANy", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("OPL_Aggregated_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index_SUM")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int?>("Weight_SUM")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weighted_Score_SUM")
                        .HasColumnType("numeric(38,2)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_Aggregated_Score_ALL_COMPANIES");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_COMPLIANCE_INDEX_CALCULATION", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<decimal?>("Total_Sum_All_Division")
                        .HasColumnType("decimal(38,7)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.ToView("WP_OPL_COMPLIANCE_INDEX_CALCULATIONS");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_Concession_Rentals_Index_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_Concession_Rentals_Index_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_CONCESSION_RENTALS_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_CONCESSION_RENTALS_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_Discovery_Index_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_Discovery_Index_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_Discovery_Index_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_Discovery_Index_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_DISCOVERY_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_DISCOVERY_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_DISCOVERY_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_DISCOVERY_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_Exploratory_Drilling_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_Exploratory_Drilling_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_EXPLORATORY_DRILLING_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsRequired()
                        .HasMaxLength(26)
                        .IsUnicode(false)
                        .HasColumnType("varchar(26)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("decimal(38,11)");

                    b.Property<decimal>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(34,19)");

                    b.Property<int?>("Unscaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_EXPLORATORY_DRILLING_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_OML_Cost_Efficiency_Metric_INDEX_MN_MAX_RGT_by_YEAR", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_OML_Cost_Efficiency_Metric_INDEX_MN_MAX_RGT_by_YEAR");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_OML_Cost_Efficiency_Metric_INDEX_MN_MAX_RGT_by_YEAR_OLD", b =>
                {
                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("decimal(38,18)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_OML_Cost_Efficiency_Metric_INDEX_MN_MAX_RGT_by_YEAR_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_OML_Cost_Efficiency_Metric_INDEX_WEIGHTED_SCORE", b =>
                {
                    b.Property<decimal?>("CAPEX_PLUS_OPEX")
                        .HasColumnType("decimal(38,2)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(38,2)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_OML_Cost_Efficiency_Metric_INDEX_WEIGHTED_SCORE");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_OML_Cost_Efficiency_Metric_INDEX_WEIGHTED_SCORE_OLD", b =>
                {
                    b.Property<decimal?>("CAPEX_PLUS_OPEX")
                        .HasColumnType("decimal(38,2)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(38,2)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("decimal(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("decimal(38,6)");

                    b.Property<decimal?>("Unscaled_Score_sum")
                        .HasColumnType("decimal(38,6)");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_OML_Cost_Efficiency_Metric_INDEX_WEIGHTED_SCORE_OLD");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_OPL_WEIGHTED_AND_RECALIBRATED_SCORE_UNION_ALL_COMPANy", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("INDEX_TYPE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MAX_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("MIN_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Recalibrated_Scaled_Index")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Scaled_by_Reciprocal_GrandTotal_RGT")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("Unscaled_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("Unscaled_Score_sum")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Weighted_Score")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_OPL_WEIGHTED_AND_RECALIBRATED_SCORE_UNION_ALL_COMPANIES");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_RESERVES_REPLACEMENT_RATIO_VALUE_PIVOTTED", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("_2010")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2010");

                    b.Property<decimal?>("_2011")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2011");

                    b.Property<decimal?>("_2012")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2012");

                    b.Property<decimal?>("_2013")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2013");

                    b.Property<decimal?>("_2014")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2014");

                    b.Property<decimal?>("_2015")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2015");

                    b.Property<decimal?>("_2016")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2016");

                    b.Property<decimal?>("_2017")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2017");

                    b.Property<decimal?>("_2018")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2018");

                    b.Property<decimal?>("_2019")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2019");

                    b.Property<decimal?>("_2020")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2020");

                    b.Property<decimal?>("_2021")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2021");

                    b.Property<decimal?>("_2022")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2022");

                    b.Property<decimal?>("_2023")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2023");

                    b.Property<decimal?>("_2024")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2024");

                    b.Property<decimal?>("_2025")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2025");

                    b.Property<decimal?>("_2026")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2026");

                    b.Property<decimal?>("_2027")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2027");

                    b.Property<decimal?>("_2028")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2028");

                    b.Property<decimal?>("_2029")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2029");

                    b.Property<decimal?>("_2030")
                        .HasColumnType("decimal(38,0)")
                        .HasColumnName("2030");

                    b.ToView("WP_RESERVES_REPLACEMENT_RATIO_VALUE_PIVOTTED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_RESERVES_REPLACEMENT_RATIO_VALUE_TO_BE_PIVOTTED", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("RESERVES_REPLACEMENT_RATIO_VALUE")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_RESERVES_REPLACEMENT_RATIO_VALUE_TO_BE_PIVOTTED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_RESERVES_UPDATES_OIL_CONDENSATE_MMBBL", b =>
                {
                    b.Property<decimal?>("Reserves_as_at_MMbbl")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Reserves_as_at_MMbbl_condensate")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Reserves_as_at_MMbbl_gas")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_RESERVES_UPDATES_OIL_CONDENSATE_MMBBL");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_RESERVES_UPDATES_OIL_CONDENSATE_STATUS_OF_RESERVE_CURRENT", b =>
                {
                    b.Property<string>("Company_Reserves_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FLAG1")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("Total_AG_NAG")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_Company_Reserves_AG")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_Company_Reserves_Condensate")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_Company_Reserves_NAG")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_Company_Reserves_Oil")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_oil_plus_condensate")
                        .HasColumnType("decimal(38,3)");

                    b.ToView("WP_RESERVES_UPDATES_OIL_CONDENSATE_STATUS_OF_RESERVE_CURRENT");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_RESERVES_UPDATES_OIL_CONDENSATE_STATUS_OF_RESERVE_CURRENT_PLANNED", b =>
                {
                    b.Property<string>("Fiveyear_Projection_Year")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("Total_AG_NAG")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_Company_Reserves_AG")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_Company_Reserves_Condensate")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_Company_Reserves_NAG")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_Company_Reserves_Oil")
                        .HasColumnType("decimal(38,3)");

                    b.Property<decimal?>("Total_oil_plus_condensate")
                        .HasColumnType("decimal(38,3)");

                    b.ToView("WP_RESERVES_UPDATES_OIL_CONDENSATE_STATUS_OF_RESERVE_CURRENT_PLANNED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_SUM_INITIAL_WELL_COMPLETION_JOBS_WORKOVERS_RECOMPLETION", b =>
                {
                    b.Property<decimal?>("Actual_Year")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Proposed_Year")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP_I")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP_W")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_SUM_INITIAL_WELL_COMPLETION_JOBS_WORKOVERS_RECOMPLETION");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_Total_E_and_P_companies_old", b =>
                {
                    b.Property<int?>("E_and_P_companies")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("WP_Total_E_and_P_companies_old");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_Total_E_and_P_company", b =>
                {
                    b.Property<int?>("E_and_P_companies")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("WP_Total_E_and_P_companies");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_TOTAL_INCIDENCE_AND_OIL_SPILL_AND_RECOVERED", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("Frequency")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Total_Quantity_Recovered")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Total_Quantity_Spilled")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_TOTAL_INCIDENCE_AND_OIL_SPILL_AND_RECOVERED");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_TOTAL_NO_OF_INCIDENCE_BY_YEAR_COMPANYNAME", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("Frequency")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_TOTAL_NO_OF_INCIDENCE_BY_YEAR_COMPANYNAME");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_TOTAL_NO_OF_OIL_SPILLED_AND_RECOVERED_BY_YEAR_COMPANYNAME", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("Total_Quantity_Recovered")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Total_Quantity_Spilled")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_TOTAL_NO_OF_OIL_SPILLED_AND_RECOVERED_BY_YEAR_COMPANYNAME");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.DataModels.WP_WORKOVERS_RECOMPLETION_JOB", b =>
                {
                    b.Property<decimal?>("Current_year_Actual_Number_data")
                        .HasColumnType("decimal(38,0)");

                    b.Property<decimal?>("Proposed_year_data")
                        .HasColumnType("decimal(38,0)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToView("WP_WORKOVERS_RECOMPLETION_JOBS");
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.Models.HSE_OCCUPATIONAL_HEALTH_MANAGEMENT", b =>
                {
                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("DoYouHaveAnOhm")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OHMplanCommunicationFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OHMplanCommunicationFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OHMplanFilePath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("OHMplanFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ReasonForNoOhm")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReasonWhyOhmWasNotCommunicatedToStaffFileName")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReasonWhyOhmWasNotCommunicatedToStaffPath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("SMSFileUploadname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WasOhmPolicyCommunicatedToStaff")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("HSE_OCCUPATIONAL_HEALTH_MANAGEMENT", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.Models.HSE_SAFETY_CULTURE_TRAINING", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AreThereTrainingPlansForHSE")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("EvidenceOfTrainingPlanFilename")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("EvidenceOfTrainingPlanPath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SafetyCurrentYearFilePath")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("SafetyCurrentYearFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SafetyLast2YearsFilePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SafetyLast2YearsFilename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_HSE_SAFETY_CULTURE_TRAINING");

                    b.ToTable("HSE_SAFETY_CULTURE_TRAINING", (string)null);
                });

            modelBuilder.Entity("Backend_UMR_Work_Program.Models.INITIAL_WELL_COMPLETION_JOB1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Actual_Completion_Date")
                        .HasColumnType("date");

                    b.Property<string>("Actual_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Budeget_Allocation_NGN")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Budeget_Allocation_USD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("COMPANY_ID")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Companyemail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Consession_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contract_Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Created_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Current_year_Actual_Number")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Current_year_Budget_Allocation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Do_you_have_approval_to_complete_the_well")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Field_ID")
                        .HasColumnType("int");

                    b.Property<string>("OML_ID")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OML_Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Processing_Fees_paid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Proposed_Completion_Date")
                        .HasColumnType("date");

                    b.Property<string>("Proposed_Completion_Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proposed_Initial_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proposed_year_data")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("QUATER")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Terrain")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Updated_by")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Year_of_WP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("oil_or_gas_wells")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("proposed_year")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("INITIAL_WELL_COMPLETION_JOBS", (string)null);
                });

            modelBuilder.Entity("RoleFunctionalityRef", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FuncId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.HasKey("RoleId", "FuncId");

                    b.HasIndex("FuncId");

                    b.ToTable("RoleFunctionalityRef", (string)null);
                });

            modelBuilder.Entity("RoleFunctionalityRef", b =>
                {
                    b.HasOne("Backend_UMR_Work_Program.DataModels.Functionality", null)
                        .WithMany()
                        .HasForeignKey("FuncId")
                        .IsRequired()
                        .HasConstraintName("FK_RoleFunctionalityRef_Functionality");

                    b.HasOne("Backend_UMR_Work_Program.DataModels.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_RoleFunctionalityRef_Role");
                });
#pragma warning restore 612, 618
        }
    }
}
